-- This file is generated by SWIG. Please do not modify by hand.
--
with Interfaces;
with Interfaces.C;
with swig;
with Interfaces.C;

package xcb is

   -- xcb_connection_t
   --
   subtype xcb_connection_t is swig.opaque_structure;

   type xcb_connection_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_connection_t;

   -- xcb_special_event_t
   --
   subtype xcb_special_event_t is swig.opaque_structure;

   type xcb_special_event_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_special_event_t;

   -- xcb_window_t
   --
   subtype xcb_window_t is Interfaces.Unsigned_32;

   type xcb_window_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_window_t;

   -- xcb_pixmap_t
   --
   subtype xcb_pixmap_t is Interfaces.Unsigned_32;

   type xcb_pixmap_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_pixmap_t;

   -- xcb_cursor_t
   --
   subtype xcb_cursor_t is Interfaces.Unsigned_32;

   type xcb_cursor_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_cursor_t;

   -- xcb_font_t
   --
   subtype xcb_font_t is Interfaces.Unsigned_32;

   type xcb_font_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_font_t;

   -- xcb_gcontext_t
   --
   subtype xcb_gcontext_t is Interfaces.Unsigned_32;

   type xcb_gcontext_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_gcontext_t;

   -- xcb_colormap_t
   --
   subtype xcb_colormap_t is Interfaces.Unsigned_32;

   type xcb_colormap_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_colormap_t;

   -- xcb_atom_t
   --
   subtype xcb_atom_t is Interfaces.Unsigned_32;

   type xcb_atom_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_atom_t;

   -- xcb_drawable_t
   --
   subtype xcb_drawable_t is Interfaces.Unsigned_32;

   type xcb_drawable_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_drawable_t;

   -- xcb_fontable_t
   --
   subtype xcb_fontable_t is Interfaces.Unsigned_32;

   type xcb_fontable_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_fontable_t;

   -- xcb_bool32_t
   --
   subtype xcb_bool32_t is Interfaces.Unsigned_32;

   type xcb_bool32_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_bool32_t;

   -- xcb_visualid_t
   --
   subtype xcb_visualid_t is Interfaces.Unsigned_32;

   type xcb_visualid_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_visualid_t;

   -- xcb_timestamp_t
   --
   subtype xcb_timestamp_t is Interfaces.Unsigned_32;

   type xcb_timestamp_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_timestamp_t;

   -- xcb_keysym_t
   --
   subtype xcb_keysym_t is Interfaces.Unsigned_32;

   type xcb_keysym_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_keysym_t;

   -- xcb_keycode_t
   --
   subtype xcb_keycode_t is Interfaces.Unsigned_8;

   type xcb_keycode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_keycode_t;

   -- xcb_keycode32_t
   --
   subtype xcb_keycode32_t is Interfaces.Unsigned_32;

   type xcb_keycode32_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_keycode32_t;

   -- xcb_button_t
   --
   subtype xcb_button_t is Interfaces.Unsigned_8;

   type xcb_button_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_button_t;

   -- xcb_visual_class_t
   --
   type xcb_visual_class_t is
     (XCB_VISUAL_CLASS_STATIC_GRAY,
      XCB_VISUAL_CLASS_GRAY_SCALE,
      XCB_VISUAL_CLASS_STATIC_COLOR,
      XCB_VISUAL_CLASS_PSEUDO_COLOR,
      XCB_VISUAL_CLASS_TRUE_COLOR,
      XCB_VISUAL_CLASS_DIRECT_COLOR);

   for xcb_visual_class_t use
     (XCB_VISUAL_CLASS_STATIC_GRAY  => 0,
      XCB_VISUAL_CLASS_GRAY_SCALE   => 1,
      XCB_VISUAL_CLASS_STATIC_COLOR => 2,
      XCB_VISUAL_CLASS_PSEUDO_COLOR => 3,
      XCB_VISUAL_CLASS_TRUE_COLOR   => 4,
      XCB_VISUAL_CLASS_DIRECT_COLOR => 5);

   pragma Convention (C, xcb_visual_class_t);

   type xcb_visual_class_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_visual_class_t;

   -- xcb_event_mask_t
   --
   type xcb_event_mask_t is
     (XCB_EVENT_MASK_NO_EVENT,
      XCB_EVENT_MASK_KEY_PRESS,
      XCB_EVENT_MASK_KEY_RELEASE,
      XCB_EVENT_MASK_BUTTON_PRESS,
      XCB_EVENT_MASK_BUTTON_RELEASE,
      XCB_EVENT_MASK_ENTER_WINDOW,
      XCB_EVENT_MASK_LEAVE_WINDOW,
      XCB_EVENT_MASK_POINTER_MOTION,
      XCB_EVENT_MASK_POINTER_MOTION_HINT,
      XCB_EVENT_MASK_BUTTON_1_MOTION,
      XCB_EVENT_MASK_BUTTON_2_MOTION,
      XCB_EVENT_MASK_BUTTON_3_MOTION,
      XCB_EVENT_MASK_BUTTON_4_MOTION,
      XCB_EVENT_MASK_BUTTON_5_MOTION,
      XCB_EVENT_MASK_BUTTON_MOTION,
      XCB_EVENT_MASK_KEYMAP_STATE,
      XCB_EVENT_MASK_EXPOSURE,
      XCB_EVENT_MASK_VISIBILITY_CHANGE,
      XCB_EVENT_MASK_STRUCTURE_NOTIFY,
      XCB_EVENT_MASK_RESIZE_REDIRECT,
      XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY,
      XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT,
      XCB_EVENT_MASK_FOCUS_CHANGE,
      XCB_EVENT_MASK_PROPERTY_CHANGE,
      XCB_EVENT_MASK_COLOR_MAP_CHANGE,
      XCB_EVENT_MASK_OWNER_GRAB_BUTTON);

   for xcb_event_mask_t use
     (XCB_EVENT_MASK_NO_EVENT              => 0,
      XCB_EVENT_MASK_KEY_PRESS             => 1,
      XCB_EVENT_MASK_KEY_RELEASE           => 2,
      XCB_EVENT_MASK_BUTTON_PRESS          => 4,
      XCB_EVENT_MASK_BUTTON_RELEASE        => 8,
      XCB_EVENT_MASK_ENTER_WINDOW          => 16,
      XCB_EVENT_MASK_LEAVE_WINDOW          => 32,
      XCB_EVENT_MASK_POINTER_MOTION        => 64,
      XCB_EVENT_MASK_POINTER_MOTION_HINT   => 128,
      XCB_EVENT_MASK_BUTTON_1_MOTION       => 256,
      XCB_EVENT_MASK_BUTTON_2_MOTION       => 512,
      XCB_EVENT_MASK_BUTTON_3_MOTION       => 1_024,
      XCB_EVENT_MASK_BUTTON_4_MOTION       => 2_048,
      XCB_EVENT_MASK_BUTTON_5_MOTION       => 4_096,
      XCB_EVENT_MASK_BUTTON_MOTION         => 8_192,
      XCB_EVENT_MASK_KEYMAP_STATE          => 16_384,
      XCB_EVENT_MASK_EXPOSURE              => 32_768,
      XCB_EVENT_MASK_VISIBILITY_CHANGE     => 65_536,
      XCB_EVENT_MASK_STRUCTURE_NOTIFY      => 131_072,
      XCB_EVENT_MASK_RESIZE_REDIRECT       => 262_144,
      XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY   => 524_288,
      XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT => 1_048_576,
      XCB_EVENT_MASK_FOCUS_CHANGE          => 2_097_152,
      XCB_EVENT_MASK_PROPERTY_CHANGE       => 4_194_304,
      XCB_EVENT_MASK_COLOR_MAP_CHANGE      => 8_388_608,
      XCB_EVENT_MASK_OWNER_GRAB_BUTTON     => 16_777_216);

   pragma Convention (C, xcb_event_mask_t);

   type xcb_event_mask_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_event_mask_t;

   -- xcb_backing_store_t
   --
   type xcb_backing_store_t is
     (XCB_BACKING_STORE_NOT_USEFUL,
      XCB_BACKING_STORE_WHEN_MAPPED,
      XCB_BACKING_STORE_ALWAYS);

   for xcb_backing_store_t use
     (XCB_BACKING_STORE_NOT_USEFUL  => 0,
      XCB_BACKING_STORE_WHEN_MAPPED => 1,
      XCB_BACKING_STORE_ALWAYS      => 2);

   pragma Convention (C, xcb_backing_store_t);

   type xcb_backing_store_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_backing_store_t;

   -- xcb_image_order_t
   --
   type xcb_image_order_t is
     (XCB_IMAGE_ORDER_LSB_FIRST, XCB_IMAGE_ORDER_MSB_FIRST);

   for xcb_image_order_t use
     (XCB_IMAGE_ORDER_LSB_FIRST => 0, XCB_IMAGE_ORDER_MSB_FIRST => 1);

   pragma Convention (C, xcb_image_order_t);

   type xcb_image_order_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_image_order_t;

   -- xcb_mod_mask_t
   --
   type xcb_mod_mask_t is
     (XCB_MOD_MASK_SHIFT,
      XCB_MOD_MASK_LOCK,
      XCB_MOD_MASK_CONTROL,
      XCB_MOD_MASK_1,
      XCB_MOD_MASK_2,
      XCB_MOD_MASK_3,
      XCB_MOD_MASK_4,
      XCB_MOD_MASK_5,
      XCB_MOD_MASK_ANY);

   for xcb_mod_mask_t use
     (XCB_MOD_MASK_SHIFT   => 1,
      XCB_MOD_MASK_LOCK    => 2,
      XCB_MOD_MASK_CONTROL => 4,
      XCB_MOD_MASK_1       => 8,
      XCB_MOD_MASK_2       => 16,
      XCB_MOD_MASK_3       => 32,
      XCB_MOD_MASK_4       => 64,
      XCB_MOD_MASK_5       => 128,
      XCB_MOD_MASK_ANY     => 32_768);

   pragma Convention (C, xcb_mod_mask_t);

   type xcb_mod_mask_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_mod_mask_t;

   -- xcb_key_but_mask_t
   --
   type xcb_key_but_mask_t is
     (XCB_KEY_BUT_MASK_SHIFT,
      XCB_KEY_BUT_MASK_LOCK,
      XCB_KEY_BUT_MASK_CONTROL,
      XCB_KEY_BUT_MASK_MOD_1,
      XCB_KEY_BUT_MASK_MOD_2,
      XCB_KEY_BUT_MASK_MOD_3,
      XCB_KEY_BUT_MASK_MOD_4,
      XCB_KEY_BUT_MASK_MOD_5,
      XCB_KEY_BUT_MASK_BUTTON_1,
      XCB_KEY_BUT_MASK_BUTTON_2,
      XCB_KEY_BUT_MASK_BUTTON_3,
      XCB_KEY_BUT_MASK_BUTTON_4,
      XCB_KEY_BUT_MASK_BUTTON_5);

   for xcb_key_but_mask_t use
     (XCB_KEY_BUT_MASK_SHIFT    => 1,
      XCB_KEY_BUT_MASK_LOCK     => 2,
      XCB_KEY_BUT_MASK_CONTROL  => 4,
      XCB_KEY_BUT_MASK_MOD_1    => 8,
      XCB_KEY_BUT_MASK_MOD_2    => 16,
      XCB_KEY_BUT_MASK_MOD_3    => 32,
      XCB_KEY_BUT_MASK_MOD_4    => 64,
      XCB_KEY_BUT_MASK_MOD_5    => 128,
      XCB_KEY_BUT_MASK_BUTTON_1 => 256,
      XCB_KEY_BUT_MASK_BUTTON_2 => 512,
      XCB_KEY_BUT_MASK_BUTTON_3 => 1_024,
      XCB_KEY_BUT_MASK_BUTTON_4 => 2_048,
      XCB_KEY_BUT_MASK_BUTTON_5 => 4_096);

   pragma Convention (C, xcb_key_but_mask_t);

   type xcb_key_but_mask_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_key_but_mask_t;

   -- xcb_window_enum_t
   --
   type xcb_window_enum_t is (XCB_WINDOW_NONE);

   for xcb_window_enum_t use (XCB_WINDOW_NONE => 0);

   pragma Convention (C, xcb_window_enum_t);

   type xcb_window_enum_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_window_enum_t;

   -- xcb_button_mask_t
   --
   type xcb_button_mask_t is
     (XCB_BUTTON_MASK_1,
      XCB_BUTTON_MASK_2,
      XCB_BUTTON_MASK_3,
      XCB_BUTTON_MASK_4,
      XCB_BUTTON_MASK_5,
      XCB_BUTTON_MASK_ANY);

   for xcb_button_mask_t use
     (XCB_BUTTON_MASK_1   => 256,
      XCB_BUTTON_MASK_2   => 512,
      XCB_BUTTON_MASK_3   => 1_024,
      XCB_BUTTON_MASK_4   => 2_048,
      XCB_BUTTON_MASK_5   => 4_096,
      XCB_BUTTON_MASK_ANY => 32_768);

   pragma Convention (C, xcb_button_mask_t);

   type xcb_button_mask_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_button_mask_t;

   -- xcb_motion_t
   --
   type xcb_motion_t is (XCB_MOTION_NORMAL, XCB_MOTION_HINT);

   for xcb_motion_t use (XCB_MOTION_NORMAL => 0, XCB_MOTION_HINT => 1);

   pragma Convention (C, xcb_motion_t);

   type xcb_motion_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_motion_t;

   -- xcb_notify_detail_t
   --
   type xcb_notify_detail_t is
     (XCB_NOTIFY_DETAIL_ANCESTOR,
      XCB_NOTIFY_DETAIL_VIRTUAL,
      XCB_NOTIFY_DETAIL_INFERIOR,
      XCB_NOTIFY_DETAIL_NONLINEAR,
      XCB_NOTIFY_DETAIL_NONLINEAR_VIRTUAL,
      XCB_NOTIFY_DETAIL_POINTER,
      XCB_NOTIFY_DETAIL_POINTER_ROOT,
      XCB_NOTIFY_DETAIL_NONE);

   for xcb_notify_detail_t use
     (XCB_NOTIFY_DETAIL_ANCESTOR          => 0,
      XCB_NOTIFY_DETAIL_VIRTUAL           => 1,
      XCB_NOTIFY_DETAIL_INFERIOR          => 2,
      XCB_NOTIFY_DETAIL_NONLINEAR         => 3,
      XCB_NOTIFY_DETAIL_NONLINEAR_VIRTUAL => 4,
      XCB_NOTIFY_DETAIL_POINTER           => 5,
      XCB_NOTIFY_DETAIL_POINTER_ROOT      => 6,
      XCB_NOTIFY_DETAIL_NONE              => 7);

   pragma Convention (C, xcb_notify_detail_t);

   type xcb_notify_detail_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_notify_detail_t;

   -- xcb_notify_mode_t
   --
   type xcb_notify_mode_t is
     (XCB_NOTIFY_MODE_NORMAL,
      XCB_NOTIFY_MODE_GRAB,
      XCB_NOTIFY_MODE_UNGRAB,
      XCB_NOTIFY_MODE_WHILE_GRABBED);

   for xcb_notify_mode_t use
     (XCB_NOTIFY_MODE_NORMAL        => 0,
      XCB_NOTIFY_MODE_GRAB          => 1,
      XCB_NOTIFY_MODE_UNGRAB        => 2,
      XCB_NOTIFY_MODE_WHILE_GRABBED => 3);

   pragma Convention (C, xcb_notify_mode_t);

   type xcb_notify_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_notify_mode_t;

   -- xcb_visibility_t
   --
   type xcb_visibility_t is
     (XCB_VISIBILITY_UNOBSCURED,
      XCB_VISIBILITY_PARTIALLY_OBSCURED,
      XCB_VISIBILITY_FULLY_OBSCURED);

   for xcb_visibility_t use
     (XCB_VISIBILITY_UNOBSCURED         => 0,
      XCB_VISIBILITY_PARTIALLY_OBSCURED => 1,
      XCB_VISIBILITY_FULLY_OBSCURED     => 2);

   pragma Convention (C, xcb_visibility_t);

   type xcb_visibility_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_visibility_t;

   -- xcb_place_t
   --
   type xcb_place_t is (XCB_PLACE_ON_TOP, XCB_PLACE_ON_BOTTOM);

   for xcb_place_t use (XCB_PLACE_ON_TOP => 0, XCB_PLACE_ON_BOTTOM => 1);

   pragma Convention (C, xcb_place_t);

   type xcb_place_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_place_t;

   -- xcb_property_t
   --
   type xcb_property_t is (XCB_PROPERTY_NEW_VALUE, XCB_PROPERTY_DELETE);

   for xcb_property_t use
     (XCB_PROPERTY_NEW_VALUE => 0, XCB_PROPERTY_DELETE => 1);

   pragma Convention (C, xcb_property_t);

   type xcb_property_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_property_t;

   -- xcb_time_t
   --
   type xcb_time_t is (XCB_TIME_CURRENT_TIME);

   for xcb_time_t use (XCB_TIME_CURRENT_TIME => 0);

   pragma Convention (C, xcb_time_t);

   type xcb_time_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_time_t;

   -- xcb_atom_enum_t
   --
   type xcb_atom_enum_t is
     (XCB_ATOM_NONE,
      XCB_ATOM_PRIMARY,
      XCB_ATOM_SECONDARY,
      XCB_ATOM_ARC,
      XCB_ATOM_ATOM,
      XCB_ATOM_BITMAP,
      XCB_ATOM_CARDINAL,
      XCB_ATOM_COLORMAP,
      XCB_ATOM_CURSOR,
      XCB_ATOM_CUT_BUFFER0,
      XCB_ATOM_CUT_BUFFER1,
      XCB_ATOM_CUT_BUFFER2,
      XCB_ATOM_CUT_BUFFER3,
      XCB_ATOM_CUT_BUFFER4,
      XCB_ATOM_CUT_BUFFER5,
      XCB_ATOM_CUT_BUFFER6,
      XCB_ATOM_CUT_BUFFER7,
      XCB_ATOM_DRAWABLE,
      XCB_ATOM_FONT,
      XCB_ATOM_INTEGER,
      XCB_ATOM_PIXMAP,
      XCB_ATOM_POINT,
      XCB_ATOM_RECTANGLE,
      XCB_ATOM_RESOURCE_MANAGER,
      XCB_ATOM_RGB_COLOR_MAP,
      XCB_ATOM_RGB_BEST_MAP,
      XCB_ATOM_RGB_BLUE_MAP,
      XCB_ATOM_RGB_DEFAULT_MAP,
      XCB_ATOM_RGB_GRAY_MAP,
      XCB_ATOM_RGB_GREEN_MAP,
      XCB_ATOM_RGB_RED_MAP,
      XCB_ATOM_STRING,
      XCB_ATOM_VISUALID,
      XCB_ATOM_WINDOW,
      XCB_ATOM_WM_COMMAND,
      XCB_ATOM_WM_HINTS,
      XCB_ATOM_WM_CLIENT_MACHINE,
      XCB_ATOM_WM_ICON_NAME,
      XCB_ATOM_WM_ICON_SIZE,
      XCB_ATOM_WM_NAME,
      XCB_ATOM_WM_NORMAL_HINTS,
      XCB_ATOM_WM_SIZE_HINTS,
      XCB_ATOM_WM_ZOOM_HINTS,
      XCB_ATOM_MIN_SPACE,
      XCB_ATOM_NORM_SPACE,
      XCB_ATOM_MAX_SPACE,
      XCB_ATOM_END_SPACE,
      XCB_ATOM_SUPERSCRIPT_X,
      XCB_ATOM_SUPERSCRIPT_Y,
      XCB_ATOM_SUBSCRIPT_X,
      XCB_ATOM_SUBSCRIPT_Y,
      XCB_ATOM_UNDERLINE_POSITION,
      XCB_ATOM_UNDERLINE_THICKNESS,
      XCB_ATOM_STRIKEOUT_ASCENT,
      XCB_ATOM_STRIKEOUT_DESCENT,
      XCB_ATOM_ITALIC_ANGLE,
      XCB_ATOM_X_HEIGHT,
      XCB_ATOM_QUAD_WIDTH,
      XCB_ATOM_WEIGHT,
      XCB_ATOM_POINT_SIZE,
      XCB_ATOM_RESOLUTION,
      XCB_ATOM_COPYRIGHT,
      XCB_ATOM_NOTICE,
      XCB_ATOM_FONT_NAME,
      XCB_ATOM_FAMILY_NAME,
      XCB_ATOM_FULL_NAME,
      XCB_ATOM_CAP_HEIGHT,
      XCB_ATOM_WM_CLASS,
      XCB_ATOM_WM_TRANSIENT_FOR);

   for xcb_atom_enum_t use
     (XCB_ATOM_NONE                => 0,
      XCB_ATOM_PRIMARY             => 1,
      XCB_ATOM_SECONDARY           => 2,
      XCB_ATOM_ARC                 => 3,
      XCB_ATOM_ATOM                => 4,
      XCB_ATOM_BITMAP              => 5,
      XCB_ATOM_CARDINAL            => 6,
      XCB_ATOM_COLORMAP            => 7,
      XCB_ATOM_CURSOR              => 8,
      XCB_ATOM_CUT_BUFFER0         => 9,
      XCB_ATOM_CUT_BUFFER1         => 10,
      XCB_ATOM_CUT_BUFFER2         => 11,
      XCB_ATOM_CUT_BUFFER3         => 12,
      XCB_ATOM_CUT_BUFFER4         => 13,
      XCB_ATOM_CUT_BUFFER5         => 14,
      XCB_ATOM_CUT_BUFFER6         => 15,
      XCB_ATOM_CUT_BUFFER7         => 16,
      XCB_ATOM_DRAWABLE            => 17,
      XCB_ATOM_FONT                => 18,
      XCB_ATOM_INTEGER             => 19,
      XCB_ATOM_PIXMAP              => 20,
      XCB_ATOM_POINT               => 21,
      XCB_ATOM_RECTANGLE           => 22,
      XCB_ATOM_RESOURCE_MANAGER    => 23,
      XCB_ATOM_RGB_COLOR_MAP       => 24,
      XCB_ATOM_RGB_BEST_MAP        => 25,
      XCB_ATOM_RGB_BLUE_MAP        => 26,
      XCB_ATOM_RGB_DEFAULT_MAP     => 27,
      XCB_ATOM_RGB_GRAY_MAP        => 28,
      XCB_ATOM_RGB_GREEN_MAP       => 29,
      XCB_ATOM_RGB_RED_MAP         => 30,
      XCB_ATOM_STRING              => 31,
      XCB_ATOM_VISUALID            => 32,
      XCB_ATOM_WINDOW              => 33,
      XCB_ATOM_WM_COMMAND          => 34,
      XCB_ATOM_WM_HINTS            => 35,
      XCB_ATOM_WM_CLIENT_MACHINE   => 36,
      XCB_ATOM_WM_ICON_NAME        => 37,
      XCB_ATOM_WM_ICON_SIZE        => 38,
      XCB_ATOM_WM_NAME             => 39,
      XCB_ATOM_WM_NORMAL_HINTS     => 40,
      XCB_ATOM_WM_SIZE_HINTS       => 41,
      XCB_ATOM_WM_ZOOM_HINTS       => 42,
      XCB_ATOM_MIN_SPACE           => 43,
      XCB_ATOM_NORM_SPACE          => 44,
      XCB_ATOM_MAX_SPACE           => 45,
      XCB_ATOM_END_SPACE           => 46,
      XCB_ATOM_SUPERSCRIPT_X       => 47,
      XCB_ATOM_SUPERSCRIPT_Y       => 48,
      XCB_ATOM_SUBSCRIPT_X         => 49,
      XCB_ATOM_SUBSCRIPT_Y         => 50,
      XCB_ATOM_UNDERLINE_POSITION  => 51,
      XCB_ATOM_UNDERLINE_THICKNESS => 52,
      XCB_ATOM_STRIKEOUT_ASCENT    => 53,
      XCB_ATOM_STRIKEOUT_DESCENT   => 54,
      XCB_ATOM_ITALIC_ANGLE        => 55,
      XCB_ATOM_X_HEIGHT            => 56,
      XCB_ATOM_QUAD_WIDTH          => 57,
      XCB_ATOM_WEIGHT              => 58,
      XCB_ATOM_POINT_SIZE          => 59,
      XCB_ATOM_RESOLUTION          => 60,
      XCB_ATOM_COPYRIGHT           => 61,
      XCB_ATOM_NOTICE              => 62,
      XCB_ATOM_FONT_NAME           => 63,
      XCB_ATOM_FAMILY_NAME         => 64,
      XCB_ATOM_FULL_NAME           => 65,
      XCB_ATOM_CAP_HEIGHT          => 66,
      XCB_ATOM_WM_CLASS            => 67,
      XCB_ATOM_WM_TRANSIENT_FOR    => 68);

   pragma Convention (C, xcb_atom_enum_t);

   type xcb_atom_enum_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_atom_enum_t;

   -- xcb_colormap_state_t
   --
   type xcb_colormap_state_t is
     (XCB_COLORMAP_STATE_UNINSTALLED, XCB_COLORMAP_STATE_INSTALLED);

   for xcb_colormap_state_t use
     (XCB_COLORMAP_STATE_UNINSTALLED => 0, XCB_COLORMAP_STATE_INSTALLED => 1);

   pragma Convention (C, xcb_colormap_state_t);

   type xcb_colormap_state_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_colormap_state_t;

   -- xcb_colormap_enum_t
   --
   type xcb_colormap_enum_t is (XCB_COLORMAP_NONE);

   for xcb_colormap_enum_t use (XCB_COLORMAP_NONE => 0);

   pragma Convention (C, xcb_colormap_enum_t);

   type xcb_colormap_enum_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_colormap_enum_t;

   -- xcb_mapping_t
   --
   type xcb_mapping_t is
     (XCB_MAPPING_MODIFIER, XCB_MAPPING_KEYBOARD, XCB_MAPPING_POINTER);

   for xcb_mapping_t use
     (XCB_MAPPING_MODIFIER => 0,
      XCB_MAPPING_KEYBOARD => 1,
      XCB_MAPPING_POINTER  => 2);

   pragma Convention (C, xcb_mapping_t);

   type xcb_mapping_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_mapping_t;

   -- xcb_window_class_t
   --
   type xcb_window_class_t is
     (XCB_WINDOW_CLASS_COPY_FROM_PARENT,
      XCB_WINDOW_CLASS_INPUT_OUTPUT,
      XCB_WINDOW_CLASS_INPUT_ONLY);

   for xcb_window_class_t use
     (XCB_WINDOW_CLASS_COPY_FROM_PARENT => 0,
      XCB_WINDOW_CLASS_INPUT_OUTPUT     => 1,
      XCB_WINDOW_CLASS_INPUT_ONLY       => 2);

   pragma Convention (C, xcb_window_class_t);

   type xcb_window_class_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_window_class_t;

   -- xcb_cw_t
   --
   type xcb_cw_t is
     (XCB_CW_BACK_PIXMAP,
      XCB_CW_BACK_PIXEL,
      XCB_CW_BORDER_PIXMAP,
      XCB_CW_BORDER_PIXEL,
      XCB_CW_BIT_GRAVITY,
      XCB_CW_WIN_GRAVITY,
      XCB_CW_BACKING_STORE,
      XCB_CW_BACKING_PLANES,
      XCB_CW_BACKING_PIXEL,
      XCB_CW_OVERRIDE_REDIRECT,
      XCB_CW_SAVE_UNDER,
      XCB_CW_EVENT_MASK,
      XCB_CW_DONT_PROPAGATE,
      XCB_CW_COLORMAP,
      XCB_CW_CURSOR);

   for xcb_cw_t use
     (XCB_CW_BACK_PIXMAP       => 1,
      XCB_CW_BACK_PIXEL        => 2,
      XCB_CW_BORDER_PIXMAP     => 4,
      XCB_CW_BORDER_PIXEL      => 8,
      XCB_CW_BIT_GRAVITY       => 16,
      XCB_CW_WIN_GRAVITY       => 32,
      XCB_CW_BACKING_STORE     => 64,
      XCB_CW_BACKING_PLANES    => 128,
      XCB_CW_BACKING_PIXEL     => 256,
      XCB_CW_OVERRIDE_REDIRECT => 512,
      XCB_CW_SAVE_UNDER        => 1_024,
      XCB_CW_EVENT_MASK        => 2_048,
      XCB_CW_DONT_PROPAGATE    => 4_096,
      XCB_CW_COLORMAP          => 8_192,
      XCB_CW_CURSOR            => 16_384);

   pragma Convention (C, xcb_cw_t);

   type xcb_cw_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_cw_t;

   -- xcb_back_pixmap_t
   --
   type xcb_back_pixmap_t is
     (XCB_BACK_PIXMAP_NONE, XCB_BACK_PIXMAP_PARENT_RELATIVE);

   for xcb_back_pixmap_t use
     (XCB_BACK_PIXMAP_NONE => 0, XCB_BACK_PIXMAP_PARENT_RELATIVE => 1);

   pragma Convention (C, xcb_back_pixmap_t);

   type xcb_back_pixmap_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_back_pixmap_t;

   -- xcb_gravity_t
   --
   type xcb_gravity_t is
     (XCB_GRAVITY_BIT_FORGET,
      XCB_GRAVITY_NORTH_WEST,
      XCB_GRAVITY_NORTH,
      XCB_GRAVITY_NORTH_EAST,
      XCB_GRAVITY_WEST,
      XCB_GRAVITY_CENTER,
      XCB_GRAVITY_EAST,
      XCB_GRAVITY_SOUTH_WEST,
      XCB_GRAVITY_SOUTH,
      XCB_GRAVITY_SOUTH_EAST,
      XCB_GRAVITY_STATIC);

   for xcb_gravity_t use
     (XCB_GRAVITY_BIT_FORGET => 0,
      XCB_GRAVITY_NORTH_WEST => 1,
      XCB_GRAVITY_NORTH      => 2,
      XCB_GRAVITY_NORTH_EAST => 3,
      XCB_GRAVITY_WEST       => 4,
      XCB_GRAVITY_CENTER     => 5,
      XCB_GRAVITY_EAST       => 6,
      XCB_GRAVITY_SOUTH_WEST => 7,
      XCB_GRAVITY_SOUTH      => 8,
      XCB_GRAVITY_SOUTH_EAST => 9,
      XCB_GRAVITY_STATIC     => 10);

   pragma Convention (C, xcb_gravity_t);

   type xcb_gravity_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_gravity_t;

   -- xcb_map_state_t
   --
   type xcb_map_state_t is
     (XCB_MAP_STATE_UNMAPPED,
      XCB_MAP_STATE_UNVIEWABLE,
      XCB_MAP_STATE_VIEWABLE);

   for xcb_map_state_t use
     (XCB_MAP_STATE_UNMAPPED   => 0,
      XCB_MAP_STATE_UNVIEWABLE => 1,
      XCB_MAP_STATE_VIEWABLE   => 2);

   pragma Convention (C, xcb_map_state_t);

   type xcb_map_state_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_map_state_t;

   -- xcb_set_mode_t
   --
   type xcb_set_mode_t is (XCB_SET_MODE_INSERT, XCB_SET_MODE_DELETE);

   for xcb_set_mode_t use (XCB_SET_MODE_INSERT => 0, XCB_SET_MODE_DELETE => 1);

   pragma Convention (C, xcb_set_mode_t);

   type xcb_set_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_set_mode_t;

   -- xcb_config_window_t
   --
   type xcb_config_window_t is
     (XCB_CONFIG_WINDOW_X,
      XCB_CONFIG_WINDOW_Y,
      XCB_CONFIG_WINDOW_WIDTH,
      XCB_CONFIG_WINDOW_HEIGHT,
      XCB_CONFIG_WINDOW_BORDER_WIDTH,
      XCB_CONFIG_WINDOW_SIBLING,
      XCB_CONFIG_WINDOW_STACK_MODE);

   for xcb_config_window_t use
     (XCB_CONFIG_WINDOW_X            => 1,
      XCB_CONFIG_WINDOW_Y            => 2,
      XCB_CONFIG_WINDOW_WIDTH        => 4,
      XCB_CONFIG_WINDOW_HEIGHT       => 8,
      XCB_CONFIG_WINDOW_BORDER_WIDTH => 16,
      XCB_CONFIG_WINDOW_SIBLING      => 32,
      XCB_CONFIG_WINDOW_STACK_MODE   => 64);

   pragma Convention (C, xcb_config_window_t);

   type xcb_config_window_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_config_window_t;

   -- xcb_stack_mode_t
   --
   type xcb_stack_mode_t is
     (XCB_STACK_MODE_ABOVE,
      XCB_STACK_MODE_BELOW,
      XCB_STACK_MODE_TOP_IF,
      XCB_STACK_MODE_BOTTOM_IF,
      XCB_STACK_MODE_OPPOSITE);

   for xcb_stack_mode_t use
     (XCB_STACK_MODE_ABOVE     => 0,
      XCB_STACK_MODE_BELOW     => 1,
      XCB_STACK_MODE_TOP_IF    => 2,
      XCB_STACK_MODE_BOTTOM_IF => 3,
      XCB_STACK_MODE_OPPOSITE  => 4);

   pragma Convention (C, xcb_stack_mode_t);

   type xcb_stack_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_stack_mode_t;

   -- xcb_circulate_t
   --
   type xcb_circulate_t is
     (XCB_CIRCULATE_RAISE_LOWEST, XCB_CIRCULATE_LOWER_HIGHEST);

   for xcb_circulate_t use
     (XCB_CIRCULATE_RAISE_LOWEST => 0, XCB_CIRCULATE_LOWER_HIGHEST => 1);

   pragma Convention (C, xcb_circulate_t);

   type xcb_circulate_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_circulate_t;

   -- xcb_prop_mode_t
   --
   type xcb_prop_mode_t is
     (XCB_PROP_MODE_REPLACE, XCB_PROP_MODE_PREPEND, XCB_PROP_MODE_APPEND);

   for xcb_prop_mode_t use
     (XCB_PROP_MODE_REPLACE => 0,
      XCB_PROP_MODE_PREPEND => 1,
      XCB_PROP_MODE_APPEND  => 2);

   pragma Convention (C, xcb_prop_mode_t);

   type xcb_prop_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_prop_mode_t;

   -- xcb_get_property_type_t
   --
   type xcb_get_property_type_t is (XCB_GET_PROPERTY_TYPE_ANY);

   for xcb_get_property_type_t use (XCB_GET_PROPERTY_TYPE_ANY => 0);

   pragma Convention (C, xcb_get_property_type_t);

   type xcb_get_property_type_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_get_property_type_t;

   -- xcb_send_event_dest_t
   --
   type xcb_send_event_dest_t is
     (XCB_SEND_EVENT_DEST_POINTER_WINDOW, XCB_SEND_EVENT_DEST_ITEM_FOCUS);

   for xcb_send_event_dest_t use
     (XCB_SEND_EVENT_DEST_POINTER_WINDOW => 0,
      XCB_SEND_EVENT_DEST_ITEM_FOCUS     => 1);

   pragma Convention (C, xcb_send_event_dest_t);

   type xcb_send_event_dest_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_send_event_dest_t;

   -- xcb_grab_mode_t
   --
   type xcb_grab_mode_t is (XCB_GRAB_MODE_SYNC, XCB_GRAB_MODE_ASYNC);

   for xcb_grab_mode_t use (XCB_GRAB_MODE_SYNC => 0, XCB_GRAB_MODE_ASYNC => 1);

   pragma Convention (C, xcb_grab_mode_t);

   type xcb_grab_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_grab_mode_t;

   -- xcb_grab_status_t
   --
   type xcb_grab_status_t is
     (XCB_GRAB_STATUS_SUCCESS,
      XCB_GRAB_STATUS_ALREADY_GRABBED,
      XCB_GRAB_STATUS_INVALID_TIME,
      XCB_GRAB_STATUS_NOT_VIEWABLE,
      XCB_GRAB_STATUS_FROZEN);

   for xcb_grab_status_t use
     (XCB_GRAB_STATUS_SUCCESS         => 0,
      XCB_GRAB_STATUS_ALREADY_GRABBED => 1,
      XCB_GRAB_STATUS_INVALID_TIME    => 2,
      XCB_GRAB_STATUS_NOT_VIEWABLE    => 3,
      XCB_GRAB_STATUS_FROZEN          => 4);

   pragma Convention (C, xcb_grab_status_t);

   type xcb_grab_status_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_grab_status_t;

   -- xcb_cursor_enum_t
   --
   type xcb_cursor_enum_t is (XCB_CURSOR_NONE);

   for xcb_cursor_enum_t use (XCB_CURSOR_NONE => 0);

   pragma Convention (C, xcb_cursor_enum_t);

   type xcb_cursor_enum_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_cursor_enum_t;

   -- xcb_button_index_t
   --
   type xcb_button_index_t is
     (XCB_BUTTON_INDEX_ANY,
      XCB_BUTTON_INDEX_1,
      XCB_BUTTON_INDEX_2,
      XCB_BUTTON_INDEX_3,
      XCB_BUTTON_INDEX_4,
      XCB_BUTTON_INDEX_5);

   for xcb_button_index_t use
     (XCB_BUTTON_INDEX_ANY => 0,
      XCB_BUTTON_INDEX_1   => 1,
      XCB_BUTTON_INDEX_2   => 2,
      XCB_BUTTON_INDEX_3   => 3,
      XCB_BUTTON_INDEX_4   => 4,
      XCB_BUTTON_INDEX_5   => 5);

   pragma Convention (C, xcb_button_index_t);

   type xcb_button_index_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_button_index_t;

   -- xcb_grab_t
   --
   type xcb_grab_t is (XCB_GRAB_ANY);

   for xcb_grab_t use (XCB_GRAB_ANY => 0);

   pragma Convention (C, xcb_grab_t);

   type xcb_grab_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_grab_t;

   -- xcb_allow_t
   --
   type xcb_allow_t is
     (XCB_ALLOW_ASYNC_POINTER,
      XCB_ALLOW_SYNC_POINTER,
      XCB_ALLOW_REPLAY_POINTER,
      XCB_ALLOW_ASYNC_KEYBOARD,
      XCB_ALLOW_SYNC_KEYBOARD,
      XCB_ALLOW_REPLAY_KEYBOARD,
      XCB_ALLOW_ASYNC_BOTH,
      XCB_ALLOW_SYNC_BOTH);

   for xcb_allow_t use
     (XCB_ALLOW_ASYNC_POINTER   => 0,
      XCB_ALLOW_SYNC_POINTER    => 1,
      XCB_ALLOW_REPLAY_POINTER  => 2,
      XCB_ALLOW_ASYNC_KEYBOARD  => 3,
      XCB_ALLOW_SYNC_KEYBOARD   => 4,
      XCB_ALLOW_REPLAY_KEYBOARD => 5,
      XCB_ALLOW_ASYNC_BOTH      => 6,
      XCB_ALLOW_SYNC_BOTH       => 7);

   pragma Convention (C, xcb_allow_t);

   type xcb_allow_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_allow_t;

   -- xcb_input_focus_t
   --
   type xcb_input_focus_t is
     (XCB_INPUT_FOCUS_NONE,
      XCB_INPUT_FOCUS_POINTER_ROOT,
      XCB_INPUT_FOCUS_PARENT,
      XCB_INPUT_FOCUS_FOLLOW_KEYBOARD);

   for xcb_input_focus_t use
     (XCB_INPUT_FOCUS_NONE            => 0,
      XCB_INPUT_FOCUS_POINTER_ROOT    => 1,
      XCB_INPUT_FOCUS_PARENT          => 2,
      XCB_INPUT_FOCUS_FOLLOW_KEYBOARD => 3);

   pragma Convention (C, xcb_input_focus_t);

   type xcb_input_focus_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_input_focus_t;

   -- xcb_font_draw_t
   --
   type xcb_font_draw_t is
     (XCB_FONT_DRAW_LEFT_TO_RIGHT, XCB_FONT_DRAW_RIGHT_TO_LEFT);

   for xcb_font_draw_t use
     (XCB_FONT_DRAW_LEFT_TO_RIGHT => 0, XCB_FONT_DRAW_RIGHT_TO_LEFT => 1);

   pragma Convention (C, xcb_font_draw_t);

   type xcb_font_draw_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_font_draw_t;

   -- xcb_gc_t
   --
   type xcb_gc_t is
     (XCB_GC_FUNCTION,
      XCB_GC_PLANE_MASK,
      XCB_GC_FOREGROUND,
      XCB_GC_BACKGROUND,
      XCB_GC_LINE_WIDTH,
      XCB_GC_LINE_STYLE,
      XCB_GC_CAP_STYLE,
      XCB_GC_JOIN_STYLE,
      XCB_GC_FILL_STYLE,
      XCB_GC_FILL_RULE,
      XCB_GC_TILE,
      XCB_GC_STIPPLE,
      XCB_GC_TILE_STIPPLE_ORIGIN_X,
      XCB_GC_TILE_STIPPLE_ORIGIN_Y,
      XCB_GC_FONT,
      XCB_GC_SUBWINDOW_MODE,
      XCB_GC_GRAPHICS_EXPOSURES,
      XCB_GC_CLIP_ORIGIN_X,
      XCB_GC_CLIP_ORIGIN_Y,
      XCB_GC_CLIP_MASK,
      XCB_GC_DASH_OFFSET,
      XCB_GC_DASH_LIST,
      XCB_GC_ARC_MODE);

   for xcb_gc_t use
     (XCB_GC_FUNCTION              => 1,
      XCB_GC_PLANE_MASK            => 2,
      XCB_GC_FOREGROUND            => 4,
      XCB_GC_BACKGROUND            => 8,
      XCB_GC_LINE_WIDTH            => 16,
      XCB_GC_LINE_STYLE            => 32,
      XCB_GC_CAP_STYLE             => 64,
      XCB_GC_JOIN_STYLE            => 128,
      XCB_GC_FILL_STYLE            => 256,
      XCB_GC_FILL_RULE             => 512,
      XCB_GC_TILE                  => 1_024,
      XCB_GC_STIPPLE               => 2_048,
      XCB_GC_TILE_STIPPLE_ORIGIN_X => 4_096,
      XCB_GC_TILE_STIPPLE_ORIGIN_Y => 8_192,
      XCB_GC_FONT                  => 16_384,
      XCB_GC_SUBWINDOW_MODE        => 32_768,
      XCB_GC_GRAPHICS_EXPOSURES    => 65_536,
      XCB_GC_CLIP_ORIGIN_X         => 131_072,
      XCB_GC_CLIP_ORIGIN_Y         => 262_144,
      XCB_GC_CLIP_MASK             => 524_288,
      XCB_GC_DASH_OFFSET           => 1_048_576,
      XCB_GC_DASH_LIST             => 2_097_152,
      XCB_GC_ARC_MODE              => 4_194_304);

   pragma Convention (C, xcb_gc_t);

   type xcb_gc_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_gc_t;

   -- xcb_gx_t
   --
   type xcb_gx_t is
     (XCB_GX_CLEAR,
      XCB_GX_AND,
      XCB_GX_AND_REVERSE,
      XCB_GX_COPY,
      XCB_GX_AND_INVERTED,
      XCB_GX_NOOP,
      XCB_GX_XOR,
      XCB_GX_OR,
      XCB_GX_NOR,
      XCB_GX_EQUIV,
      XCB_GX_INVERT,
      XCB_GX_OR_REVERSE,
      XCB_GX_COPY_INVERTED,
      XCB_GX_OR_INVERTED,
      XCB_GX_NAND,
      XCB_GX_SET);

   for xcb_gx_t use
     (XCB_GX_CLEAR         => 0,
      XCB_GX_AND           => 1,
      XCB_GX_AND_REVERSE   => 2,
      XCB_GX_COPY          => 3,
      XCB_GX_AND_INVERTED  => 4,
      XCB_GX_NOOP          => 5,
      XCB_GX_XOR           => 6,
      XCB_GX_OR            => 7,
      XCB_GX_NOR           => 8,
      XCB_GX_EQUIV         => 9,
      XCB_GX_INVERT        => 10,
      XCB_GX_OR_REVERSE    => 11,
      XCB_GX_COPY_INVERTED => 12,
      XCB_GX_OR_INVERTED   => 13,
      XCB_GX_NAND          => 14,
      XCB_GX_SET           => 15);

   pragma Convention (C, xcb_gx_t);

   type xcb_gx_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_gx_t;

   -- xcb_line_style_t
   --
   type xcb_line_style_t is
     (XCB_LINE_STYLE_SOLID,
      XCB_LINE_STYLE_ON_OFF_DASH,
      XCB_LINE_STYLE_DOUBLE_DASH);

   for xcb_line_style_t use
     (XCB_LINE_STYLE_SOLID       => 0,
      XCB_LINE_STYLE_ON_OFF_DASH => 1,
      XCB_LINE_STYLE_DOUBLE_DASH => 2);

   pragma Convention (C, xcb_line_style_t);

   type xcb_line_style_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_line_style_t;

   -- xcb_cap_style_t
   --
   type xcb_cap_style_t is
     (XCB_CAP_STYLE_NOT_LAST,
      XCB_CAP_STYLE_BUTT,
      XCB_CAP_STYLE_ROUND,
      XCB_CAP_STYLE_PROJECTING);

   for xcb_cap_style_t use
     (XCB_CAP_STYLE_NOT_LAST   => 0,
      XCB_CAP_STYLE_BUTT       => 1,
      XCB_CAP_STYLE_ROUND      => 2,
      XCB_CAP_STYLE_PROJECTING => 3);

   pragma Convention (C, xcb_cap_style_t);

   type xcb_cap_style_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_cap_style_t;

   -- xcb_join_style_t
   --
   type xcb_join_style_t is
     (XCB_JOIN_STYLE_MITER, XCB_JOIN_STYLE_ROUND, XCB_JOIN_STYLE_BEVEL);

   for xcb_join_style_t use
     (XCB_JOIN_STYLE_MITER => 0,
      XCB_JOIN_STYLE_ROUND => 1,
      XCB_JOIN_STYLE_BEVEL => 2);

   pragma Convention (C, xcb_join_style_t);

   type xcb_join_style_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_join_style_t;

   -- xcb_fill_style_t
   --
   type xcb_fill_style_t is
     (XCB_FILL_STYLE_SOLID,
      XCB_FILL_STYLE_TILED,
      XCB_FILL_STYLE_STIPPLED,
      XCB_FILL_STYLE_OPAQUE_STIPPLED);

   for xcb_fill_style_t use
     (XCB_FILL_STYLE_SOLID           => 0,
      XCB_FILL_STYLE_TILED           => 1,
      XCB_FILL_STYLE_STIPPLED        => 2,
      XCB_FILL_STYLE_OPAQUE_STIPPLED => 3);

   pragma Convention (C, xcb_fill_style_t);

   type xcb_fill_style_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_fill_style_t;

   -- xcb_fill_rule_t
   --
   type xcb_fill_rule_t is (XCB_FILL_RULE_EVEN_ODD, XCB_FILL_RULE_WINDING);

   for xcb_fill_rule_t use
     (XCB_FILL_RULE_EVEN_ODD => 0, XCB_FILL_RULE_WINDING => 1);

   pragma Convention (C, xcb_fill_rule_t);

   type xcb_fill_rule_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_fill_rule_t;

   -- xcb_subwindow_mode_t
   --
   type xcb_subwindow_mode_t is
     (XCB_SUBWINDOW_MODE_CLIP_BY_CHILDREN,
      XCB_SUBWINDOW_MODE_INCLUDE_INFERIORS);

   for xcb_subwindow_mode_t use
     (XCB_SUBWINDOW_MODE_CLIP_BY_CHILDREN  => 0,
      XCB_SUBWINDOW_MODE_INCLUDE_INFERIORS => 1);

   pragma Convention (C, xcb_subwindow_mode_t);

   type xcb_subwindow_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_subwindow_mode_t;

   -- xcb_arc_mode_t
   --
   type xcb_arc_mode_t is (XCB_ARC_MODE_CHORD, XCB_ARC_MODE_PIE_SLICE);

   for xcb_arc_mode_t use
     (XCB_ARC_MODE_CHORD => 0, XCB_ARC_MODE_PIE_SLICE => 1);

   pragma Convention (C, xcb_arc_mode_t);

   type xcb_arc_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_arc_mode_t;

   -- xcb_clip_ordering_t
   --
   type xcb_clip_ordering_t is
     (XCB_CLIP_ORDERING_UNSORTED,
      XCB_CLIP_ORDERING_Y_SORTED,
      XCB_CLIP_ORDERING_YX_SORTED,
      XCB_CLIP_ORDERING_YX_BANDED);

   for xcb_clip_ordering_t use
     (XCB_CLIP_ORDERING_UNSORTED  => 0,
      XCB_CLIP_ORDERING_Y_SORTED  => 1,
      XCB_CLIP_ORDERING_YX_SORTED => 2,
      XCB_CLIP_ORDERING_YX_BANDED => 3);

   pragma Convention (C, xcb_clip_ordering_t);

   type xcb_clip_ordering_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_clip_ordering_t;

   -- xcb_coord_mode_t
   --
   type xcb_coord_mode_t is (XCB_COORD_MODE_ORIGIN, XCB_COORD_MODE_PREVIOUS);

   for xcb_coord_mode_t use
     (XCB_COORD_MODE_ORIGIN => 0, XCB_COORD_MODE_PREVIOUS => 1);

   pragma Convention (C, xcb_coord_mode_t);

   type xcb_coord_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_coord_mode_t;

   -- xcb_poly_shape_t
   --
   type xcb_poly_shape_t is
     (XCB_POLY_SHAPE_COMPLEX, XCB_POLY_SHAPE_NONCONVEX, XCB_POLY_SHAPE_CONVEX);

   for xcb_poly_shape_t use
     (XCB_POLY_SHAPE_COMPLEX   => 0,
      XCB_POLY_SHAPE_NONCONVEX => 1,
      XCB_POLY_SHAPE_CONVEX    => 2);

   pragma Convention (C, xcb_poly_shape_t);

   type xcb_poly_shape_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_poly_shape_t;

   -- xcb_image_format_t
   --
   type xcb_image_format_t is
     (XCB_IMAGE_FORMAT_XY_BITMAP,
      XCB_IMAGE_FORMAT_XY_PIXMAP,
      XCB_IMAGE_FORMAT_Z_PIXMAP);

   for xcb_image_format_t use
     (XCB_IMAGE_FORMAT_XY_BITMAP => 0,
      XCB_IMAGE_FORMAT_XY_PIXMAP => 1,
      XCB_IMAGE_FORMAT_Z_PIXMAP  => 2);

   pragma Convention (C, xcb_image_format_t);

   type xcb_image_format_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_image_format_t;

   -- xcb_colormap_alloc_t
   --
   type xcb_colormap_alloc_t is
     (XCB_COLORMAP_ALLOC_NONE, XCB_COLORMAP_ALLOC_ALL);

   for xcb_colormap_alloc_t use
     (XCB_COLORMAP_ALLOC_NONE => 0, XCB_COLORMAP_ALLOC_ALL => 1);

   pragma Convention (C, xcb_colormap_alloc_t);

   type xcb_colormap_alloc_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_colormap_alloc_t;

   -- xcb_color_flag_t
   --
   type xcb_color_flag_t is
     (XCB_COLOR_FLAG_RED, XCB_COLOR_FLAG_GREEN, XCB_COLOR_FLAG_BLUE);

   for xcb_color_flag_t use
     (XCB_COLOR_FLAG_RED   => 1,
      XCB_COLOR_FLAG_GREEN => 2,
      XCB_COLOR_FLAG_BLUE  => 4);

   pragma Convention (C, xcb_color_flag_t);

   type xcb_color_flag_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_color_flag_t;

   -- xcb_pixmap_enum_t
   --
   type xcb_pixmap_enum_t is (XCB_PIXMAP_NONE);

   for xcb_pixmap_enum_t use (XCB_PIXMAP_NONE => 0);

   pragma Convention (C, xcb_pixmap_enum_t);

   type xcb_pixmap_enum_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_pixmap_enum_t;

   -- xcb_font_enum_t
   --
   type xcb_font_enum_t is (XCB_FONT_NONE);

   for xcb_font_enum_t use (XCB_FONT_NONE => 0);

   pragma Convention (C, xcb_font_enum_t);

   type xcb_font_enum_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_font_enum_t;

   -- xcb_query_shape_of_t
   --
   type xcb_query_shape_of_t is
     (XCB_QUERY_SHAPE_OF_LARGEST_CURSOR,
      XCB_QUERY_SHAPE_OF_FASTEST_TILE,
      XCB_QUERY_SHAPE_OF_FASTEST_STIPPLE);

   for xcb_query_shape_of_t use
     (XCB_QUERY_SHAPE_OF_LARGEST_CURSOR  => 0,
      XCB_QUERY_SHAPE_OF_FASTEST_TILE    => 1,
      XCB_QUERY_SHAPE_OF_FASTEST_STIPPLE => 2);

   pragma Convention (C, xcb_query_shape_of_t);

   type xcb_query_shape_of_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_query_shape_of_t;

   -- xcb_kb_t
   --
   type xcb_kb_t is
     (XCB_KB_KEY_CLICK_PERCENT,
      XCB_KB_BELL_PERCENT,
      XCB_KB_BELL_PITCH,
      XCB_KB_BELL_DURATION,
      XCB_KB_LED,
      XCB_KB_LED_MODE,
      XCB_KB_KEY,
      XCB_KB_AUTO_REPEAT_MODE);

   for xcb_kb_t use
     (XCB_KB_KEY_CLICK_PERCENT => 1,
      XCB_KB_BELL_PERCENT      => 2,
      XCB_KB_BELL_PITCH        => 4,
      XCB_KB_BELL_DURATION     => 8,
      XCB_KB_LED               => 16,
      XCB_KB_LED_MODE          => 32,
      XCB_KB_KEY               => 64,
      XCB_KB_AUTO_REPEAT_MODE  => 128);

   pragma Convention (C, xcb_kb_t);

   type xcb_kb_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_kb_t;

   -- xcb_led_mode_t
   --
   type xcb_led_mode_t is (XCB_LED_MODE_OFF, XCB_LED_MODE_ON);

   for xcb_led_mode_t use (XCB_LED_MODE_OFF => 0, XCB_LED_MODE_ON => 1);

   pragma Convention (C, xcb_led_mode_t);

   type xcb_led_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_led_mode_t;

   -- xcb_auto_repeat_mode_t
   --
   type xcb_auto_repeat_mode_t is
     (XCB_AUTO_REPEAT_MODE_OFF,
      XCB_AUTO_REPEAT_MODE_ON,
      XCB_AUTO_REPEAT_MODE_DEFAULT);

   for xcb_auto_repeat_mode_t use
     (XCB_AUTO_REPEAT_MODE_OFF     => 0,
      XCB_AUTO_REPEAT_MODE_ON      => 1,
      XCB_AUTO_REPEAT_MODE_DEFAULT => 2);

   pragma Convention (C, xcb_auto_repeat_mode_t);

   type xcb_auto_repeat_mode_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_auto_repeat_mode_t;

   -- xcb_blanking_t
   --
   type xcb_blanking_t is
     (XCB_BLANKING_NOT_PREFERRED,
      XCB_BLANKING_PREFERRED,
      XCB_BLANKING_DEFAULT);

   for xcb_blanking_t use
     (XCB_BLANKING_NOT_PREFERRED => 0,
      XCB_BLANKING_PREFERRED     => 1,
      XCB_BLANKING_DEFAULT       => 2);

   pragma Convention (C, xcb_blanking_t);

   type xcb_blanking_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_blanking_t;

   -- xcb_exposures_t
   --
   type xcb_exposures_t is
     (XCB_EXPOSURES_NOT_ALLOWED, XCB_EXPOSURES_ALLOWED, XCB_EXPOSURES_DEFAULT);

   for xcb_exposures_t use
     (XCB_EXPOSURES_NOT_ALLOWED => 0,
      XCB_EXPOSURES_ALLOWED     => 1,
      XCB_EXPOSURES_DEFAULT     => 2);

   pragma Convention (C, xcb_exposures_t);

   type xcb_exposures_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_exposures_t;

   -- xcb_host_mode_t
   --
   type xcb_host_mode_t is (XCB_HOST_MODE_INSERT, XCB_HOST_MODE_DELETE);

   for xcb_host_mode_t use
     (XCB_HOST_MODE_INSERT => 0, XCB_HOST_MODE_DELETE => 1);

   pragma Convention (C, xcb_host_mode_t);

   type xcb_host_mode_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_host_mode_t;

   -- xcb_family_t
   --
   type xcb_family_t is
     (XCB_FAMILY_INTERNET,
      XCB_FAMILY_DECNET,
      XCB_FAMILY_CHAOS,
      XCB_FAMILY_SERVER_INTERPRETED,
      XCB_FAMILY_INTERNET_6);

   for xcb_family_t use
     (XCB_FAMILY_INTERNET           => 0,
      XCB_FAMILY_DECNET             => 1,
      XCB_FAMILY_CHAOS              => 2,
      XCB_FAMILY_SERVER_INTERPRETED => 5,
      XCB_FAMILY_INTERNET_6         => 6);

   pragma Convention (C, xcb_family_t);

   type xcb_family_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_family_t;

   -- xcb_access_control_t
   --
   type xcb_access_control_t is
     (XCB_ACCESS_CONTROL_DISABLE, XCB_ACCESS_CONTROL_ENABLE);

   for xcb_access_control_t use
     (XCB_ACCESS_CONTROL_DISABLE => 0, XCB_ACCESS_CONTROL_ENABLE => 1);

   pragma Convention (C, xcb_access_control_t);

   type xcb_access_control_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_access_control_t;

   -- xcb_close_down_t
   --
   type xcb_close_down_t is
     (XCB_CLOSE_DOWN_DESTROY_ALL,
      XCB_CLOSE_DOWN_RETAIN_PERMANENT,
      XCB_CLOSE_DOWN_RETAIN_TEMPORARY);

   for xcb_close_down_t use
     (XCB_CLOSE_DOWN_DESTROY_ALL      => 0,
      XCB_CLOSE_DOWN_RETAIN_PERMANENT => 1,
      XCB_CLOSE_DOWN_RETAIN_TEMPORARY => 2);

   pragma Convention (C, xcb_close_down_t);

   type xcb_close_down_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_close_down_t;

   -- xcb_kill_t
   --
   type xcb_kill_t is (XCB_KILL_ALL_TEMPORARY);

   for xcb_kill_t use (XCB_KILL_ALL_TEMPORARY => 0);

   pragma Convention (C, xcb_kill_t);

   type xcb_kill_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_kill_t;

   -- xcb_screen_saver_t
   --
   type xcb_screen_saver_t is
     (XCB_SCREEN_SAVER_RESET, XCB_SCREEN_SAVER_ACTIVE);

   for xcb_screen_saver_t use
     (XCB_SCREEN_SAVER_RESET => 0, XCB_SCREEN_SAVER_ACTIVE => 1);

   pragma Convention (C, xcb_screen_saver_t);

   type xcb_screen_saver_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_screen_saver_t;

   -- xcb_mapping_status_t
   --
   type xcb_mapping_status_t is
     (XCB_MAPPING_STATUS_SUCCESS,
      XCB_MAPPING_STATUS_BUSY,
      XCB_MAPPING_STATUS_FAILURE);

   for xcb_mapping_status_t use
     (XCB_MAPPING_STATUS_SUCCESS => 0,
      XCB_MAPPING_STATUS_BUSY    => 1,
      XCB_MAPPING_STATUS_FAILURE => 2);

   pragma Convention (C, xcb_mapping_status_t);

   type xcb_mapping_status_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_mapping_status_t;

   -- xcb_map_index_t
   --
   type xcb_map_index_t is
     (XCB_MAP_INDEX_SHIFT,
      XCB_MAP_INDEX_LOCK,
      XCB_MAP_INDEX_CONTROL,
      XCB_MAP_INDEX_1,
      XCB_MAP_INDEX_2,
      XCB_MAP_INDEX_3,
      XCB_MAP_INDEX_4,
      XCB_MAP_INDEX_5);

   for xcb_map_index_t use
     (XCB_MAP_INDEX_SHIFT   => 0,
      XCB_MAP_INDEX_LOCK    => 1,
      XCB_MAP_INDEX_CONTROL => 2,
      XCB_MAP_INDEX_1       => 3,
      XCB_MAP_INDEX_2       => 4,
      XCB_MAP_INDEX_3       => 5,
      XCB_MAP_INDEX_4       => 6,
      XCB_MAP_INDEX_5       => 7);

   pragma Convention (C, xcb_map_index_t);

   type xcb_map_index_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_map_index_t;

   -- xcb_render_pict_type_t
   --
   type xcb_render_pict_type_t is
     (XCB_RENDER_PICT_TYPE_INDEXED, XCB_RENDER_PICT_TYPE_DIRECT);

   for xcb_render_pict_type_t use
     (XCB_RENDER_PICT_TYPE_INDEXED => 0, XCB_RENDER_PICT_TYPE_DIRECT => 1);

   pragma Convention (C, xcb_render_pict_type_t);

   type xcb_render_pict_type_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_pict_type_t;

   -- xcb_render_picture_enum_t
   --
   type xcb_render_picture_enum_t is (XCB_RENDER_PICTURE_NONE);

   for xcb_render_picture_enum_t use (XCB_RENDER_PICTURE_NONE => 0);

   pragma Convention (C, xcb_render_picture_enum_t);

   type xcb_render_picture_enum_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_picture_enum_t;

   -- xcb_render_pict_op_t
   --
   type xcb_render_pict_op_t is
     (XCB_RENDER_PICT_OP_CLEAR,
      XCB_RENDER_PICT_OP_SRC,
      XCB_RENDER_PICT_OP_DST,
      XCB_RENDER_PICT_OP_OVER,
      XCB_RENDER_PICT_OP_OVER_REVERSE,
      XCB_RENDER_PICT_OP_IN,
      XCB_RENDER_PICT_OP_IN_REVERSE,
      XCB_RENDER_PICT_OP_OUT,
      XCB_RENDER_PICT_OP_OUT_REVERSE,
      XCB_RENDER_PICT_OP_ATOP,
      XCB_RENDER_PICT_OP_ATOP_REVERSE,
      XCB_RENDER_PICT_OP_XOR,
      XCB_RENDER_PICT_OP_ADD,
      XCB_RENDER_PICT_OP_SATURATE,
      XCB_RENDER_PICT_OP_DISJOINT_CLEAR,
      XCB_RENDER_PICT_OP_DISJOINT_SRC,
      XCB_RENDER_PICT_OP_DISJOINT_DST,
      XCB_RENDER_PICT_OP_DISJOINT_OVER,
      XCB_RENDER_PICT_OP_DISJOINT_OVER_REVERSE,
      XCB_RENDER_PICT_OP_DISJOINT_IN,
      XCB_RENDER_PICT_OP_DISJOINT_IN_REVERSE,
      XCB_RENDER_PICT_OP_DISJOINT_OUT,
      XCB_RENDER_PICT_OP_DISJOINT_OUT_REVERSE,
      XCB_RENDER_PICT_OP_DISJOINT_ATOP,
      XCB_RENDER_PICT_OP_DISJOINT_ATOP_REVERSE,
      XCB_RENDER_PICT_OP_DISJOINT_XOR,
      XCB_RENDER_PICT_OP_CONJOINT_CLEAR,
      XCB_RENDER_PICT_OP_CONJOINT_SRC,
      XCB_RENDER_PICT_OP_CONJOINT_DST,
      XCB_RENDER_PICT_OP_CONJOINT_OVER,
      XCB_RENDER_PICT_OP_CONJOINT_OVER_REVERSE,
      XCB_RENDER_PICT_OP_CONJOINT_IN,
      XCB_RENDER_PICT_OP_CONJOINT_IN_REVERSE,
      XCB_RENDER_PICT_OP_CONJOINT_OUT,
      XCB_RENDER_PICT_OP_CONJOINT_OUT_REVERSE,
      XCB_RENDER_PICT_OP_CONJOINT_ATOP,
      XCB_RENDER_PICT_OP_CONJOINT_ATOP_REVERSE,
      XCB_RENDER_PICT_OP_CONJOINT_XOR,
      XCB_RENDER_PICT_OP_MULTIPLY,
      XCB_RENDER_PICT_OP_SCREEN,
      XCB_RENDER_PICT_OP_OVERLAY,
      XCB_RENDER_PICT_OP_DARKEN,
      XCB_RENDER_PICT_OP_LIGHTEN,
      XCB_RENDER_PICT_OP_COLOR_DODGE,
      XCB_RENDER_PICT_OP_COLOR_BURN,
      XCB_RENDER_PICT_OP_HARD_LIGHT,
      XCB_RENDER_PICT_OP_SOFT_LIGHT,
      XCB_RENDER_PICT_OP_DIFFERENCE,
      XCB_RENDER_PICT_OP_EXCLUSION,
      XCB_RENDER_PICT_OP_HSL_HUE,
      XCB_RENDER_PICT_OP_HSL_SATURATION,
      XCB_RENDER_PICT_OP_HSL_COLOR,
      XCB_RENDER_PICT_OP_HSL_LUMINOSITY);

   for xcb_render_pict_op_t use
     (XCB_RENDER_PICT_OP_CLEAR                 => 0,
      XCB_RENDER_PICT_OP_SRC                   => 1,
      XCB_RENDER_PICT_OP_DST                   => 2,
      XCB_RENDER_PICT_OP_OVER                  => 3,
      XCB_RENDER_PICT_OP_OVER_REVERSE          => 4,
      XCB_RENDER_PICT_OP_IN                    => 5,
      XCB_RENDER_PICT_OP_IN_REVERSE            => 6,
      XCB_RENDER_PICT_OP_OUT                   => 7,
      XCB_RENDER_PICT_OP_OUT_REVERSE           => 8,
      XCB_RENDER_PICT_OP_ATOP                  => 9,
      XCB_RENDER_PICT_OP_ATOP_REVERSE          => 10,
      XCB_RENDER_PICT_OP_XOR                   => 11,
      XCB_RENDER_PICT_OP_ADD                   => 12,
      XCB_RENDER_PICT_OP_SATURATE              => 13,
      XCB_RENDER_PICT_OP_DISJOINT_CLEAR        => 16,
      XCB_RENDER_PICT_OP_DISJOINT_SRC          => 17,
      XCB_RENDER_PICT_OP_DISJOINT_DST          => 18,
      XCB_RENDER_PICT_OP_DISJOINT_OVER         => 19,
      XCB_RENDER_PICT_OP_DISJOINT_OVER_REVERSE => 20,
      XCB_RENDER_PICT_OP_DISJOINT_IN           => 21,
      XCB_RENDER_PICT_OP_DISJOINT_IN_REVERSE   => 22,
      XCB_RENDER_PICT_OP_DISJOINT_OUT          => 23,
      XCB_RENDER_PICT_OP_DISJOINT_OUT_REVERSE  => 24,
      XCB_RENDER_PICT_OP_DISJOINT_ATOP         => 25,
      XCB_RENDER_PICT_OP_DISJOINT_ATOP_REVERSE => 26,
      XCB_RENDER_PICT_OP_DISJOINT_XOR          => 27,
      XCB_RENDER_PICT_OP_CONJOINT_CLEAR        => 32,
      XCB_RENDER_PICT_OP_CONJOINT_SRC          => 33,
      XCB_RENDER_PICT_OP_CONJOINT_DST          => 34,
      XCB_RENDER_PICT_OP_CONJOINT_OVER         => 35,
      XCB_RENDER_PICT_OP_CONJOINT_OVER_REVERSE => 36,
      XCB_RENDER_PICT_OP_CONJOINT_IN           => 37,
      XCB_RENDER_PICT_OP_CONJOINT_IN_REVERSE   => 38,
      XCB_RENDER_PICT_OP_CONJOINT_OUT          => 39,
      XCB_RENDER_PICT_OP_CONJOINT_OUT_REVERSE  => 40,
      XCB_RENDER_PICT_OP_CONJOINT_ATOP         => 41,
      XCB_RENDER_PICT_OP_CONJOINT_ATOP_REVERSE => 42,
      XCB_RENDER_PICT_OP_CONJOINT_XOR          => 43,
      XCB_RENDER_PICT_OP_MULTIPLY              => 48,
      XCB_RENDER_PICT_OP_SCREEN                => 49,
      XCB_RENDER_PICT_OP_OVERLAY               => 50,
      XCB_RENDER_PICT_OP_DARKEN                => 51,
      XCB_RENDER_PICT_OP_LIGHTEN               => 52,
      XCB_RENDER_PICT_OP_COLOR_DODGE           => 53,
      XCB_RENDER_PICT_OP_COLOR_BURN            => 54,
      XCB_RENDER_PICT_OP_HARD_LIGHT            => 55,
      XCB_RENDER_PICT_OP_SOFT_LIGHT            => 56,
      XCB_RENDER_PICT_OP_DIFFERENCE            => 57,
      XCB_RENDER_PICT_OP_EXCLUSION             => 58,
      XCB_RENDER_PICT_OP_HSL_HUE               => 59,
      XCB_RENDER_PICT_OP_HSL_SATURATION        => 60,
      XCB_RENDER_PICT_OP_HSL_COLOR             => 61,
      XCB_RENDER_PICT_OP_HSL_LUMINOSITY        => 62);

   pragma Convention (C, xcb_render_pict_op_t);

   type xcb_render_pict_op_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_pict_op_t;

   -- xcb_render_poly_edge_t
   --
   type xcb_render_poly_edge_t is
     (XCB_RENDER_POLY_EDGE_SHARP, XCB_RENDER_POLY_EDGE_SMOOTH);

   for xcb_render_poly_edge_t use
     (XCB_RENDER_POLY_EDGE_SHARP => 0, XCB_RENDER_POLY_EDGE_SMOOTH => 1);

   pragma Convention (C, xcb_render_poly_edge_t);

   type xcb_render_poly_edge_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_poly_edge_t;

   -- xcb_render_poly_mode_t
   --
   type xcb_render_poly_mode_t is
     (XCB_RENDER_POLY_MODE_PRECISE, XCB_RENDER_POLY_MODE_IMPRECISE);

   for xcb_render_poly_mode_t use
     (XCB_RENDER_POLY_MODE_PRECISE => 0, XCB_RENDER_POLY_MODE_IMPRECISE => 1);

   pragma Convention (C, xcb_render_poly_mode_t);

   type xcb_render_poly_mode_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_poly_mode_t;

   -- xcb_render_cp_t
   --
   type xcb_render_cp_t is
     (XCB_RENDER_CP_REPEAT,
      XCB_RENDER_CP_ALPHA_MAP,
      XCB_RENDER_CP_ALPHA_X_ORIGIN,
      XCB_RENDER_CP_ALPHA_Y_ORIGIN,
      XCB_RENDER_CP_CLIP_X_ORIGIN,
      XCB_RENDER_CP_CLIP_Y_ORIGIN,
      XCB_RENDER_CP_CLIP_MASK,
      XCB_RENDER_CP_GRAPHICS_EXPOSURE,
      XCB_RENDER_CP_SUBWINDOW_MODE,
      XCB_RENDER_CP_POLY_EDGE,
      XCB_RENDER_CP_POLY_MODE,
      XCB_RENDER_CP_DITHER,
      XCB_RENDER_CP_COMPONENT_ALPHA);

   for xcb_render_cp_t use
     (XCB_RENDER_CP_REPEAT            => 1,
      XCB_RENDER_CP_ALPHA_MAP         => 2,
      XCB_RENDER_CP_ALPHA_X_ORIGIN    => 4,
      XCB_RENDER_CP_ALPHA_Y_ORIGIN    => 8,
      XCB_RENDER_CP_CLIP_X_ORIGIN     => 16,
      XCB_RENDER_CP_CLIP_Y_ORIGIN     => 32,
      XCB_RENDER_CP_CLIP_MASK         => 64,
      XCB_RENDER_CP_GRAPHICS_EXPOSURE => 128,
      XCB_RENDER_CP_SUBWINDOW_MODE    => 256,
      XCB_RENDER_CP_POLY_EDGE         => 512,
      XCB_RENDER_CP_POLY_MODE         => 1_024,
      XCB_RENDER_CP_DITHER            => 2_048,
      XCB_RENDER_CP_COMPONENT_ALPHA   => 4_096);

   pragma Convention (C, xcb_render_cp_t);

   type xcb_render_cp_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_cp_t;

   -- xcb_render_sub_pixel_t
   --
   type xcb_render_sub_pixel_t is
     (XCB_RENDER_SUB_PIXEL_UNKNOWN,
      XCB_RENDER_SUB_PIXEL_HORIZONTAL_RGB,
      XCB_RENDER_SUB_PIXEL_HORIZONTAL_BGR,
      XCB_RENDER_SUB_PIXEL_VERTICAL_RGB,
      XCB_RENDER_SUB_PIXEL_VERTICAL_BGR,
      XCB_RENDER_SUB_PIXEL_NONE);

   for xcb_render_sub_pixel_t use
     (XCB_RENDER_SUB_PIXEL_UNKNOWN        => 0,
      XCB_RENDER_SUB_PIXEL_HORIZONTAL_RGB => 1,
      XCB_RENDER_SUB_PIXEL_HORIZONTAL_BGR => 2,
      XCB_RENDER_SUB_PIXEL_VERTICAL_RGB   => 3,
      XCB_RENDER_SUB_PIXEL_VERTICAL_BGR   => 4,
      XCB_RENDER_SUB_PIXEL_NONE           => 5);

   pragma Convention (C, xcb_render_sub_pixel_t);

   type xcb_render_sub_pixel_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_sub_pixel_t;

   -- xcb_render_repeat_t
   --
   type xcb_render_repeat_t is
     (XCB_RENDER_REPEAT_NONE,
      XCB_RENDER_REPEAT_NORMAL,
      XCB_RENDER_REPEAT_PAD,
      XCB_RENDER_REPEAT_REFLECT);

   for xcb_render_repeat_t use
     (XCB_RENDER_REPEAT_NONE    => 0,
      XCB_RENDER_REPEAT_NORMAL  => 1,
      XCB_RENDER_REPEAT_PAD     => 2,
      XCB_RENDER_REPEAT_REFLECT => 3);

   pragma Convention (C, xcb_render_repeat_t);

   type xcb_render_repeat_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_repeat_t;

   -- xcb_render_glyph_t
   --
   subtype xcb_render_glyph_t is Interfaces.Unsigned_32;

   type xcb_render_glyph_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_glyph_t;

   -- xcb_render_glyphset_t
   --
   subtype xcb_render_glyphset_t is Interfaces.Unsigned_32;

   type xcb_render_glyphset_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_glyphset_t;

   -- xcb_render_picture_t
   --
   subtype xcb_render_picture_t is Interfaces.Unsigned_32;

   type xcb_render_picture_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_picture_t;

   -- xcb_render_pictformat_t
   --
   subtype xcb_render_pictformat_t is Interfaces.Unsigned_32;

   type xcb_render_pictformat_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_pictformat_t;

   -- xcb_render_fixed_t
   --
   subtype xcb_render_fixed_t is Interfaces.Integer_32;

   type xcb_render_fixed_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_render_fixed_t;

   -- iovec
   --
   subtype iovec is swig.opaque_structure;

   type iovec_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.iovec;

   -- xcb_send_request_flags_t
   --
   type xcb_send_request_flags_t is
     (XCB_REQUEST_CHECKED,
      XCB_REQUEST_RAW,
      XCB_REQUEST_DISCARD_REPLY,
      XCB_REQUEST_REPLY_FDS);

   for xcb_send_request_flags_t use
     (XCB_REQUEST_CHECKED       => 1,
      XCB_REQUEST_RAW           => 2,
      XCB_REQUEST_DISCARD_REPLY => 4,
      XCB_REQUEST_REPLY_FDS     => 8);

   pragma Convention (C, xcb_send_request_flags_t);

   type xcb_send_request_flags_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb.xcb_send_request_flags_t;

   -- xcb_pict_format_t
   --
   type xcb_pict_format_t is
     (XCB_PICT_FORMAT_ID,
      XCB_PICT_FORMAT_TYPE,
      XCB_PICT_FORMAT_DEPTH,
      XCB_PICT_FORMAT_RED,
      XCB_PICT_FORMAT_RED_MASK,
      XCB_PICT_FORMAT_GREEN,
      XCB_PICT_FORMAT_GREEN_MASK,
      XCB_PICT_FORMAT_BLUE,
      XCB_PICT_FORMAT_BLUE_MASK,
      XCB_PICT_FORMAT_ALPHA,
      XCB_PICT_FORMAT_ALPHA_MASK,
      XCB_PICT_FORMAT_COLORMAP);

   for xcb_pict_format_t use
     (XCB_PICT_FORMAT_ID         => 1,
      XCB_PICT_FORMAT_TYPE       => 2,
      XCB_PICT_FORMAT_DEPTH      => 4,
      XCB_PICT_FORMAT_RED        => 8,
      XCB_PICT_FORMAT_RED_MASK   => 16,
      XCB_PICT_FORMAT_GREEN      => 32,
      XCB_PICT_FORMAT_GREEN_MASK => 64,
      XCB_PICT_FORMAT_BLUE       => 128,
      XCB_PICT_FORMAT_BLUE_MASK  => 256,
      XCB_PICT_FORMAT_ALPHA      => 512,
      XCB_PICT_FORMAT_ALPHA_MASK => 1_024,
      XCB_PICT_FORMAT_COLORMAP   => 2_048);

   pragma Convention (C, xcb_pict_format_t);

   type xcb_pict_format_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_pict_format_t;

   -- xcb_pict_standard_t
   --
   type xcb_pict_standard_t is
     (XCB_PICT_STANDARD_ARGB_32,
      XCB_PICT_STANDARD_RGB_24,
      XCB_PICT_STANDARD_A_8,
      XCB_PICT_STANDARD_A_4,
      XCB_PICT_STANDARD_A_1);

   for xcb_pict_standard_t use
     (XCB_PICT_STANDARD_ARGB_32 => 0,
      XCB_PICT_STANDARD_RGB_24  => 1,
      XCB_PICT_STANDARD_A_8     => 2,
      XCB_PICT_STANDARD_A_4     => 3,
      XCB_PICT_STANDARD_A_1     => 4);

   pragma Convention (C, xcb_pict_standard_t);

   type xcb_pict_standard_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_pict_standard_t;

   -- xcb_render_util_composite_text_stream_t
   --
   subtype xcb_render_util_composite_text_stream_t is swig.opaque_structure;

   type xcb_render_util_composite_text_stream_t_array is
     array
       (Interfaces.C.size_t range <>) of aliased xcb
       .xcb_render_util_composite_text_stream_t;

   -- xcb_glx_pixmap_t
   --
   subtype xcb_glx_pixmap_t is Interfaces.Unsigned_32;

   type xcb_glx_pixmap_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_pixmap_t;

   -- xcb_glx_context_t
   --
   subtype xcb_glx_context_t is Interfaces.Unsigned_32;

   type xcb_glx_context_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_context_t;

   -- xcb_glx_pbuffer_t
   --
   subtype xcb_glx_pbuffer_t is Interfaces.Unsigned_32;

   type xcb_glx_pbuffer_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_pbuffer_t;

   -- xcb_glx_window_t
   --
   subtype xcb_glx_window_t is Interfaces.Unsigned_32;

   type xcb_glx_window_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_window_t;

   -- xcb_glx_fbconfig_t
   --
   subtype xcb_glx_fbconfig_t is Interfaces.Unsigned_32;

   type xcb_glx_fbconfig_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_fbconfig_t;

   -- xcb_glx_drawable_t
   --
   subtype xcb_glx_drawable_t is Interfaces.Unsigned_32;

   type xcb_glx_drawable_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_drawable_t;

   -- xcb_glx_float32_t
   --
   subtype xcb_glx_float32_t is Interfaces.C.C_float;

   type xcb_glx_float32_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_float32_t;

   -- xcb_glx_float64_t
   --
   subtype xcb_glx_float64_t is Interfaces.C.double;

   type xcb_glx_float64_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_float64_t;

   -- xcb_glx_bool32_t
   --
   subtype xcb_glx_bool32_t is Interfaces.Unsigned_32;

   type xcb_glx_bool32_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_bool32_t;

   -- xcb_glx_context_tag_t
   --
   subtype xcb_glx_context_tag_t is Interfaces.Unsigned_32;

   type xcb_glx_context_tag_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_context_tag_t;

   -- xcb_glx_pbcet_t
   --
   type xcb_glx_pbcet_t is (XCB_GLX_PBCET_DAMAGED, XCB_GLX_PBCET_SAVED);

   for xcb_glx_pbcet_t use
     (XCB_GLX_PBCET_DAMAGED => 32_791, XCB_GLX_PBCET_SAVED => 32_792);

   pragma Convention (C, xcb_glx_pbcet_t);

   type xcb_glx_pbcet_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_pbcet_t;

   -- xcb_glx_pbcdt_t
   --
   type xcb_glx_pbcdt_t is (XCB_GLX_PBCDT_WINDOW, XCB_GLX_PBCDT_PBUFFER);

   for xcb_glx_pbcdt_t use
     (XCB_GLX_PBCDT_WINDOW => 32_793, XCB_GLX_PBCDT_PBUFFER => 32_794);

   pragma Convention (C, xcb_glx_pbcdt_t);

   type xcb_glx_pbcdt_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_pbcdt_t;

   -- xcb_glx_gc_t
   --
   type xcb_glx_gc_t is
     (XCB_GLX_GC_GL_CURRENT_BIT,
      XCB_GLX_GC_GL_POINT_BIT,
      XCB_GLX_GC_GL_LINE_BIT,
      XCB_GLX_GC_GL_POLYGON_BIT,
      XCB_GLX_GC_GL_POLYGON_STIPPLE_BIT,
      XCB_GLX_GC_GL_PIXEL_MODE_BIT,
      XCB_GLX_GC_GL_LIGHTING_BIT,
      XCB_GLX_GC_GL_FOG_BIT,
      XCB_GLX_GC_GL_DEPTH_BUFFER_BIT,
      XCB_GLX_GC_GL_ACCUM_BUFFER_BIT,
      XCB_GLX_GC_GL_STENCIL_BUFFER_BIT,
      XCB_GLX_GC_GL_VIEWPORT_BIT,
      XCB_GLX_GC_GL_TRANSFORM_BIT,
      XCB_GLX_GC_GL_ENABLE_BIT,
      XCB_GLX_GC_GL_COLOR_BUFFER_BIT,
      XCB_GLX_GC_GL_HINT_BIT,
      XCB_GLX_GC_GL_EVAL_BIT,
      XCB_GLX_GC_GL_LIST_BIT,
      XCB_GLX_GC_GL_TEXTURE_BIT,
      XCB_GLX_GC_GL_SCISSOR_BIT,
      XCB_GLX_GC_GL_ALL_ATTRIB_BITS);

   for xcb_glx_gc_t use
     (XCB_GLX_GC_GL_CURRENT_BIT         => 1,
      XCB_GLX_GC_GL_POINT_BIT           => 2,
      XCB_GLX_GC_GL_LINE_BIT            => 4,
      XCB_GLX_GC_GL_POLYGON_BIT         => 8,
      XCB_GLX_GC_GL_POLYGON_STIPPLE_BIT => 16,
      XCB_GLX_GC_GL_PIXEL_MODE_BIT      => 32,
      XCB_GLX_GC_GL_LIGHTING_BIT        => 64,
      XCB_GLX_GC_GL_FOG_BIT             => 128,
      XCB_GLX_GC_GL_DEPTH_BUFFER_BIT    => 256,
      XCB_GLX_GC_GL_ACCUM_BUFFER_BIT    => 512,
      XCB_GLX_GC_GL_STENCIL_BUFFER_BIT  => 1_024,
      XCB_GLX_GC_GL_VIEWPORT_BIT        => 2_048,
      XCB_GLX_GC_GL_TRANSFORM_BIT       => 4_096,
      XCB_GLX_GC_GL_ENABLE_BIT          => 8_192,
      XCB_GLX_GC_GL_COLOR_BUFFER_BIT    => 16_384,
      XCB_GLX_GC_GL_HINT_BIT            => 32_768,
      XCB_GLX_GC_GL_EVAL_BIT            => 65_536,
      XCB_GLX_GC_GL_LIST_BIT            => 131_072,
      XCB_GLX_GC_GL_TEXTURE_BIT         => 262_144,
      XCB_GLX_GC_GL_SCISSOR_BIT         => 524_288,
      XCB_GLX_GC_GL_ALL_ATTRIB_BITS     => 16_777_215);

   pragma Convention (C, xcb_glx_gc_t);

   type xcb_glx_gc_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_gc_t;

   -- xcb_glx_rm_t
   --
   type xcb_glx_rm_t is
     (XCB_GLX_RM_GL_RENDER, XCB_GLX_RM_GL_FEEDBACK, XCB_GLX_RM_GL_SELECT);

   for xcb_glx_rm_t use
     (XCB_GLX_RM_GL_RENDER   => 7_168,
      XCB_GLX_RM_GL_FEEDBACK => 7_169,
      XCB_GLX_RM_GL_SELECT   => 7_170);

   pragma Convention (C, xcb_glx_rm_t);

   type xcb_glx_rm_t_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.xcb_glx_rm_t;

   -- Display
   --
   subtype Display is swig.opaque_structure;

   type Display_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.Display;

   -- XEventQueueOwner
   --
   type XEventQueueOwner is (XlibOwnsEventQueue, XCBOwnsEventQueue);

   for XEventQueueOwner use (XlibOwnsEventQueue => 0, XCBOwnsEventQueue => 1);

   pragma Convention (C, XEventQueueOwner);

   type XEventQueueOwner_array is
     array (Interfaces.C.size_t range <>) of aliased xcb.XEventQueueOwner;

   XCB_ATOM_ANY : aliased constant xcb.xcb_atom_enum_t := XCB_ATOM_NONE;
   XCB_GRAVITY_WIN_UNMAP : aliased constant xcb.xcb_gravity_t   :=
     XCB_GRAVITY_BIT_FORGET;
   X_PROTOCOL                             : constant := 11;
   X_PROTOCOL_REVISION                    : constant := 0;
   X_TCP_PORT                             : constant := 6_000;
   XCB_CONN_ERROR                         : constant := 1;
   XCB_CONN_CLOSED_EXT_NOTSUPPORTED       : constant := 2;
   XCB_CONN_CLOSED_MEM_INSUFFICIENT       : constant := 3;
   XCB_CONN_CLOSED_REQ_LEN_EXCEED         : constant := 4;
   XCB_CONN_CLOSED_PARSE_ERR              : constant := 5;
   XCB_CONN_CLOSED_INVALID_SCREEN         : constant := 6;
   XCB_CONN_CLOSED_FDPASSING_FAILED       : constant := 7;
   XCB_NONE : aliased constant Interfaces.C.long := 8#0#;
   XCB_COPY_FROM_PARENT : aliased constant Interfaces.C.long := 8#0#;
   XCB_CURRENT_TIME : aliased constant Interfaces.C.long := 8#0#;
   XCB_NO_SYMBOL : aliased constant Interfaces.C.long := 8#0#;
   XCB_KEY_PRESS                          : constant := 2;
   XCB_KEY_RELEASE                        : constant := 3;
   XCB_BUTTON_PRESS                       : constant := 4;
   XCB_BUTTON_RELEASE                     : constant := 5;
   XCB_MOTION_NOTIFY                      : constant := 6;
   XCB_ENTER_NOTIFY                       : constant := 7;
   XCB_LEAVE_NOTIFY                       : constant := 8;
   XCB_FOCUS_IN                           : constant := 9;
   XCB_FOCUS_OUT                          : constant := 10;
   XCB_KEYMAP_NOTIFY                      : constant := 11;
   XCB_EXPOSE                             : constant := 12;
   XCB_GRAPHICS_EXPOSURE                  : constant := 13;
   XCB_NO_EXPOSURE                        : constant := 14;
   XCB_VISIBILITY_NOTIFY                  : constant := 15;
   XCB_CREATE_NOTIFY                      : constant := 16;
   XCB_DESTROY_NOTIFY                     : constant := 17;
   XCB_UNMAP_NOTIFY                       : constant := 18;
   XCB_MAP_NOTIFY                         : constant := 19;
   XCB_MAP_REQUEST                        : constant := 20;
   XCB_REPARENT_NOTIFY                    : constant := 21;
   XCB_CONFIGURE_NOTIFY                   : constant := 22;
   XCB_CONFIGURE_REQUEST                  : constant := 23;
   XCB_GRAVITY_NOTIFY                     : constant := 24;
   XCB_RESIZE_REQUEST                     : constant := 25;
   XCB_CIRCULATE_NOTIFY                   : constant := 26;
   XCB_CIRCULATE_REQUEST                  : constant := 27;
   XCB_PROPERTY_NOTIFY                    : constant := 28;
   XCB_SELECTION_CLEAR                    : constant := 29;
   XCB_SELECTION_REQUEST                  : constant := 30;
   XCB_SELECTION_NOTIFY                   : constant := 31;
   XCB_COLORMAP_NOTIFY                    : constant := 32;
   XCB_CLIENT_MESSAGE                     : constant := 33;
   XCB_MAPPING_NOTIFY                     : constant := 34;
   XCB_GE_GENERIC                         : constant := 35;
   XCB_REQUEST                            : constant := 1;
   XCB_VALUE                              : constant := 2;
   XCB_WINDOW                             : constant := 3;
   XCB_PIXMAP                             : constant := 4;
   XCB_ATOM                               : constant := 5;
   XCB_CURSOR                             : constant := 6;
   XCB_FONT                               : constant := 7;
   XCB_MATCH                              : constant := 8;
   XCB_DRAWABLE                           : constant := 9;
   XCB_ACCESS                             : constant := 10;
   XCB_ALLOC                              : constant := 11;
   XCB_COLORMAP                           : constant := 12;
   XCB_G_CONTEXT                          : constant := 13;
   XCB_ID_CHOICE                          : constant := 14;
   XCB_NAME                               : constant := 15;
   XCB_LENGTH                             : constant := 16;
   XCB_IMPLEMENTATION                     : constant := 17;
   XCB_CREATE_WINDOW                      : constant := 1;
   XCB_CHANGE_WINDOW_ATTRIBUTES           : constant := 2;
   XCB_GET_WINDOW_ATTRIBUTES              : constant := 3;
   XCB_DESTROY_WINDOW                     : constant := 4;
   XCB_DESTROY_SUBWINDOWS                 : constant := 5;
   XCB_CHANGE_SAVE_SET                    : constant := 6;
   XCB_REPARENT_WINDOW                    : constant := 7;
   XCB_MAP_WINDOW                         : constant := 8;
   XCB_MAP_SUBWINDOWS                     : constant := 9;
   XCB_UNMAP_WINDOW                       : constant := 10;
   XCB_UNMAP_SUBWINDOWS                   : constant := 11;
   XCB_CONFIGURE_WINDOW                   : constant := 12;
   XCB_CIRCULATE_WINDOW                   : constant := 13;
   XCB_GET_GEOMETRY                       : constant := 14;
   XCB_QUERY_TREE                         : constant := 15;
   XCB_INTERN_ATOM                        : constant := 16;
   XCB_GET_ATOM_NAME                      : constant := 17;
   XCB_CHANGE_PROPERTY                    : constant := 18;
   XCB_DELETE_PROPERTY                    : constant := 19;
   XCB_GET_PROPERTY                       : constant := 20;
   XCB_LIST_PROPERTIES                    : constant := 21;
   XCB_SET_SELECTION_OWNER                : constant := 22;
   XCB_GET_SELECTION_OWNER                : constant := 23;
   XCB_CONVERT_SELECTION                  : constant := 24;
   XCB_SEND_EVENT                         : constant := 25;
   XCB_GRAB_POINTER                       : constant := 26;
   XCB_UNGRAB_POINTER                     : constant := 27;
   XCB_GRAB_BUTTON                        : constant := 28;
   XCB_UNGRAB_BUTTON                      : constant := 29;
   XCB_CHANGE_ACTIVE_POINTER_GRAB         : constant := 30;
   XCB_GRAB_KEYBOARD                      : constant := 31;
   XCB_UNGRAB_KEYBOARD                    : constant := 32;
   XCB_GRAB_KEY                           : constant := 33;
   XCB_UNGRAB_KEY                         : constant := 34;
   XCB_ALLOW_EVENTS                       : constant := 35;
   XCB_GRAB_SERVER                        : constant := 36;
   XCB_UNGRAB_SERVER                      : constant := 37;
   XCB_QUERY_POINTER                      : constant := 38;
   XCB_GET_MOTION_EVENTS                  : constant := 39;
   XCB_TRANSLATE_COORDINATES              : constant := 40;
   XCB_WARP_POINTER                       : constant := 41;
   XCB_SET_INPUT_FOCUS                    : constant := 42;
   XCB_GET_INPUT_FOCUS                    : constant := 43;
   XCB_QUERY_KEYMAP                       : constant := 44;
   XCB_OPEN_FONT                          : constant := 45;
   XCB_CLOSE_FONT                         : constant := 46;
   XCB_QUERY_FONT                         : constant := 47;
   XCB_QUERY_TEXT_EXTENTS                 : constant := 48;
   XCB_LIST_FONTS                         : constant := 49;
   XCB_LIST_FONTS_WITH_INFO               : constant := 50;
   XCB_SET_FONT_PATH                      : constant := 51;
   XCB_GET_FONT_PATH                      : constant := 52;
   XCB_CREATE_PIXMAP                      : constant := 53;
   XCB_FREE_PIXMAP                        : constant := 54;
   XCB_CREATE_GC                          : constant := 55;
   XCB_CHANGE_GC                          : constant := 56;
   XCB_COPY_GC                            : constant := 57;
   XCB_SET_DASHES                         : constant := 58;
   XCB_SET_CLIP_RECTANGLES                : constant := 59;
   XCB_FREE_GC                            : constant := 60;
   XCB_CLEAR_AREA                         : constant := 61;
   XCB_COPY_AREA                          : constant := 62;
   XCB_COPY_PLANE                         : constant := 63;
   XCB_POLY_POINT                         : constant := 64;
   XCB_POLY_LINE                          : constant := 65;
   XCB_POLY_SEGMENT                       : constant := 66;
   XCB_POLY_RECTANGLE                     : constant := 67;
   XCB_POLY_ARC                           : constant := 68;
   XCB_FILL_POLY                          : constant := 69;
   XCB_POLY_FILL_RECTANGLE                : constant := 70;
   XCB_POLY_FILL_ARC                      : constant := 71;
   XCB_PUT_IMAGE                          : constant := 72;
   XCB_GET_IMAGE                          : constant := 73;
   XCB_POLY_TEXT_8                        : constant := 74;
   XCB_POLY_TEXT_16                       : constant := 75;
   XCB_IMAGE_TEXT_8                       : constant := 76;
   XCB_IMAGE_TEXT_16                      : constant := 77;
   XCB_CREATE_COLORMAP                    : constant := 78;
   XCB_FREE_COLORMAP                      : constant := 79;
   XCB_COPY_COLORMAP_AND_FREE             : constant := 80;
   XCB_INSTALL_COLORMAP                   : constant := 81;
   XCB_UNINSTALL_COLORMAP                 : constant := 82;
   XCB_LIST_INSTALLED_COLORMAPS           : constant := 83;
   XCB_ALLOC_COLOR                        : constant := 84;
   XCB_ALLOC_NAMED_COLOR                  : constant := 85;
   XCB_ALLOC_COLOR_CELLS                  : constant := 86;
   XCB_ALLOC_COLOR_PLANES                 : constant := 87;
   XCB_FREE_COLORS                        : constant := 88;
   XCB_STORE_COLORS                       : constant := 89;
   XCB_STORE_NAMED_COLOR                  : constant := 90;
   XCB_QUERY_COLORS                       : constant := 91;
   XCB_LOOKUP_COLOR                       : constant := 92;
   XCB_CREATE_CURSOR                      : constant := 93;
   XCB_CREATE_GLYPH_CURSOR                : constant := 94;
   XCB_FREE_CURSOR                        : constant := 95;
   XCB_RECOLOR_CURSOR                     : constant := 96;
   XCB_QUERY_BEST_SIZE                    : constant := 97;
   XCB_QUERY_EXTENSION                    : constant := 98;
   XCB_LIST_EXTENSIONS                    : constant := 99;
   XCB_CHANGE_KEYBOARD_MAPPING            : constant := 100;
   XCB_GET_KEYBOARD_MAPPING               : constant := 101;
   XCB_CHANGE_KEYBOARD_CONTROL            : constant := 102;
   XCB_GET_KEYBOARD_CONTROL               : constant := 103;
   XCB_BELL                               : constant := 104;
   XCB_CHANGE_POINTER_CONTROL             : constant := 105;
   XCB_GET_POINTER_CONTROL                : constant := 106;
   XCB_SET_SCREEN_SAVER                   : constant := 107;
   XCB_GET_SCREEN_SAVER                   : constant := 108;
   XCB_CHANGE_HOSTS                       : constant := 109;
   XCB_LIST_HOSTS                         : constant := 110;
   XCB_SET_ACCESS_CONTROL                 : constant := 111;
   XCB_SET_CLOSE_DOWN_MODE                : constant := 112;
   XCB_KILL_CLIENT                        : constant := 113;
   XCB_ROTATE_PROPERTIES                  : constant := 114;
   XCB_FORCE_SCREEN_SAVER                 : constant := 115;
   XCB_SET_POINTER_MAPPING                : constant := 116;
   XCB_GET_POINTER_MAPPING                : constant := 117;
   XCB_SET_MODIFIER_MAPPING               : constant := 118;
   XCB_GET_MODIFIER_MAPPING               : constant := 119;
   XCB_NO_OPERATION                       : constant := 127;
   XCB_BIGREQUESTS_MAJOR_VERSION          : constant := 0;
   XCB_BIGREQUESTS_MINOR_VERSION          : constant := 0;
   XCB_BIG_REQUESTS_ENABLE                : constant := 0;
   XCB_RENDER_MAJOR_VERSION               : constant := 0;
   XCB_RENDER_MINOR_VERSION               : constant := 11;
   XCB_RENDER_PICT_FORMAT                 : constant := 0;
   XCB_RENDER_PICTURE                     : constant := 1;
   XCB_RENDER_PICT_OP                     : constant := 2;
   XCB_RENDER_GLYPH_SET                   : constant := 3;
   XCB_RENDER_GLYPH                       : constant := 4;
   XCB_RENDER_QUERY_VERSION               : constant := 0;
   XCB_RENDER_QUERY_PICT_FORMATS          : constant := 1;
   XCB_RENDER_QUERY_PICT_INDEX_VALUES     : constant := 2;
   XCB_RENDER_CREATE_PICTURE              : constant := 4;
   XCB_RENDER_CHANGE_PICTURE              : constant := 5;
   XCB_RENDER_SET_PICTURE_CLIP_RECTANGLES : constant := 6;
   XCB_RENDER_FREE_PICTURE                : constant := 7;
   XCB_RENDER_COMPOSITE                   : constant := 8;
   XCB_RENDER_TRAPEZOIDS                  : constant := 10;
   XCB_RENDER_TRIANGLES                   : constant := 11;
   XCB_RENDER_TRI_STRIP                   : constant := 12;
   XCB_RENDER_TRI_FAN                     : constant := 13;
   XCB_RENDER_CREATE_GLYPH_SET            : constant := 17;
   XCB_RENDER_REFERENCE_GLYPH_SET         : constant := 18;
   XCB_RENDER_FREE_GLYPH_SET              : constant := 19;
   XCB_RENDER_ADD_GLYPHS                  : constant := 20;
   XCB_RENDER_FREE_GLYPHS                 : constant := 22;
   XCB_RENDER_COMPOSITE_GLYPHS_8          : constant := 23;
   XCB_RENDER_COMPOSITE_GLYPHS_16         : constant := 24;
   XCB_RENDER_COMPOSITE_GLYPHS_32         : constant := 25;
   XCB_RENDER_FILL_RECTANGLES             : constant := 26;
   XCB_RENDER_CREATE_CURSOR               : constant := 27;
   XCB_RENDER_SET_PICTURE_TRANSFORM       : constant := 28;
   XCB_RENDER_QUERY_FILTERS               : constant := 29;
   XCB_RENDER_SET_PICTURE_FILTER          : constant := 30;
   XCB_RENDER_CREATE_ANIM_CURSOR          : constant := 31;
   XCB_RENDER_ADD_TRAPS                   : constant := 32;
   XCB_RENDER_CREATE_SOLID_FILL           : constant := 33;
   XCB_RENDER_CREATE_LINEAR_GRADIENT      : constant := 34;
   XCB_RENDER_CREATE_RADIAL_GRADIENT      : constant := 35;
   XCB_RENDER_CREATE_CONICAL_GRADIENT     : constant := 36;
   XCB_XCMISC_MAJOR_VERSION               : constant := 1;
   XCB_XCMISC_MINOR_VERSION               : constant := 1;
   XCB_XC_MISC_GET_VERSION                : constant := 0;
   XCB_XC_MISC_GET_XID_RANGE              : constant := 1;
   XCB_XC_MISC_GET_XID_LIST               : constant := 2;
   XCB_GLX_MAJOR_VERSION                  : constant := 1;
   XCB_GLX_MINOR_VERSION                  : constant := 4;
   XCB_GLX_GENERIC                        : constant := -1;
   XCB_GLX_BAD_CONTEXT                    : constant := 0;
   XCB_GLX_BAD_CONTEXT_STATE              : constant := 1;
   XCB_GLX_BAD_DRAWABLE                   : constant := 2;
   XCB_GLX_BAD_PIXMAP                     : constant := 3;
   XCB_GLX_BAD_CONTEXT_TAG                : constant := 4;
   XCB_GLX_BAD_CURRENT_WINDOW             : constant := 5;
   XCB_GLX_BAD_RENDER_REQUEST             : constant := 6;
   XCB_GLX_BAD_LARGE_REQUEST              : constant := 7;
   XCB_GLX_UNSUPPORTED_PRIVATE_REQUEST    : constant := 8;
   XCB_GLX_BAD_FB_CONFIG                  : constant := 9;
   XCB_GLX_BAD_PBUFFER                    : constant := 10;
   XCB_GLX_BAD_CURRENT_DRAWABLE           : constant := 11;
   XCB_GLX_BAD_WINDOW                     : constant := 12;
   XCB_GLX_GLX_BAD_PROFILE_ARB            : constant := 13;
   XCB_GLX_PBUFFER_CLOBBER                : constant := 0;
   XCB_GLX_BUFFER_SWAP_COMPLETE           : constant := 1;
   XCB_GLX_RENDER                         : constant := 1;
   XCB_GLX_RENDER_LARGE                   : constant := 2;
   XCB_GLX_CREATE_CONTEXT                 : constant := 3;
   XCB_GLX_DESTROY_CONTEXT                : constant := 4;
   XCB_GLX_MAKE_CURRENT                   : constant := 5;
   XCB_GLX_IS_DIRECT                      : constant := 6;
   XCB_GLX_QUERY_VERSION                  : constant := 7;
   XCB_GLX_WAIT_GL                        : constant := 8;
   XCB_GLX_WAIT_X                         : constant := 9;
   XCB_GLX_COPY_CONTEXT                   : constant := 10;
   XCB_GLX_SWAP_BUFFERS                   : constant := 11;
   XCB_GLX_USE_X_FONT                     : constant := 12;
   XCB_GLX_CREATE_GLX_PIXMAP              : constant := 13;
   XCB_GLX_GET_VISUAL_CONFIGS             : constant := 14;
   XCB_GLX_DESTROY_GLX_PIXMAP             : constant := 15;
   XCB_GLX_VENDOR_PRIVATE                 : constant := 16;
   XCB_GLX_VENDOR_PRIVATE_WITH_REPLY      : constant := 17;
   XCB_GLX_QUERY_EXTENSIONS_STRING        : constant := 18;
   XCB_GLX_QUERY_SERVER_STRING            : constant := 19;
   XCB_GLX_CLIENT_INFO                    : constant := 20;
   XCB_GLX_GET_FB_CONFIGS                 : constant := 21;
   XCB_GLX_CREATE_PIXMAP                  : constant := 22;
   XCB_GLX_DESTROY_PIXMAP                 : constant := 23;
   XCB_GLX_CREATE_NEW_CONTEXT             : constant := 24;
   XCB_GLX_QUERY_CONTEXT                  : constant := 25;
   XCB_GLX_MAKE_CONTEXT_CURRENT           : constant := 26;
   XCB_GLX_CREATE_PBUFFER                 : constant := 27;
   XCB_GLX_DESTROY_PBUFFER                : constant := 28;
   XCB_GLX_GET_DRAWABLE_ATTRIBUTES        : constant := 29;
   XCB_GLX_CHANGE_DRAWABLE_ATTRIBUTES     : constant := 30;
   XCB_GLX_CREATE_WINDOW                  : constant := 31;
   XCB_GLX_DELETE_WINDOW                  : constant := 32;
   XCB_GLX_SET_CLIENT_INFO_ARB            : constant := 33;
   XCB_GLX_CREATE_CONTEXT_ATTRIBS_ARB     : constant := 34;
   XCB_GLX_SET_CLIENT_INFO_2ARB           : constant := 35;
   XCB_GLX_NEW_LIST                       : constant := 101;
   XCB_GLX_END_LIST                       : constant := 102;
   XCB_GLX_DELETE_LISTS                   : constant := 103;
   XCB_GLX_GEN_LISTS                      : constant := 104;
   XCB_GLX_FEEDBACK_BUFFER                : constant := 105;
   XCB_GLX_SELECT_BUFFER                  : constant := 106;
   XCB_GLX_RENDER_MODE                    : constant := 107;
   XCB_GLX_FINISH                         : constant := 108;
   XCB_GLX_PIXEL_STOREF                   : constant := 109;
   XCB_GLX_PIXEL_STOREI                   : constant := 110;
   XCB_GLX_READ_PIXELS                    : constant := 111;
   XCB_GLX_GET_BOOLEANV                   : constant := 112;
   XCB_GLX_GET_CLIP_PLANE                 : constant := 113;
   XCB_GLX_GET_DOUBLEV                    : constant := 114;
   XCB_GLX_GET_ERROR                      : constant := 115;
   XCB_GLX_GET_FLOATV                     : constant := 116;
   XCB_GLX_GET_INTEGERV                   : constant := 117;
   XCB_GLX_GET_LIGHTFV                    : constant := 118;
   XCB_GLX_GET_LIGHTIV                    : constant := 119;
   XCB_GLX_GET_MAPDV                      : constant := 120;
   XCB_GLX_GET_MAPFV                      : constant := 121;
   XCB_GLX_GET_MAPIV                      : constant := 122;
   XCB_GLX_GET_MATERIALFV                 : constant := 123;
   XCB_GLX_GET_MATERIALIV                 : constant := 124;
   XCB_GLX_GET_PIXEL_MAPFV                : constant := 125;
   XCB_GLX_GET_PIXEL_MAPUIV               : constant := 126;
   XCB_GLX_GET_PIXEL_MAPUSV               : constant := 127;
   XCB_GLX_GET_POLYGON_STIPPLE            : constant := 128;
   XCB_GLX_GET_STRING                     : constant := 129;
   XCB_GLX_GET_TEX_ENVFV                  : constant := 130;
   XCB_GLX_GET_TEX_ENVIV                  : constant := 131;
   XCB_GLX_GET_TEX_GENDV                  : constant := 132;
   XCB_GLX_GET_TEX_GENFV                  : constant := 133;
   XCB_GLX_GET_TEX_GENIV                  : constant := 134;
   XCB_GLX_GET_TEX_IMAGE                  : constant := 135;
   XCB_GLX_GET_TEX_PARAMETERFV            : constant := 136;
   XCB_GLX_GET_TEX_PARAMETERIV            : constant := 137;
   XCB_GLX_GET_TEX_LEVEL_PARAMETERFV      : constant := 138;
   XCB_GLX_GET_TEX_LEVEL_PARAMETERIV      : constant := 139;
   XCB_GLX_IS_ENABLED                     : constant := 140;
   XCB_GLX_IS_LIST                        : constant := 141;
   XCB_GLX_FLUSH                          : constant := 142;
   XCB_GLX_ARE_TEXTURES_RESIDENT          : constant := 143;
   XCB_GLX_DELETE_TEXTURES                : constant := 144;
   XCB_GLX_GEN_TEXTURES                   : constant := 145;
   XCB_GLX_IS_TEXTURE                     : constant := 146;
   XCB_GLX_GET_COLOR_TABLE                : constant := 147;
   XCB_GLX_GET_COLOR_TABLE_PARAMETERFV    : constant := 148;
   XCB_GLX_GET_COLOR_TABLE_PARAMETERIV    : constant := 149;
   XCB_GLX_GET_CONVOLUTION_FILTER         : constant := 150;
   XCB_GLX_GET_CONVOLUTION_PARAMETERFV    : constant := 151;
   XCB_GLX_GET_CONVOLUTION_PARAMETERIV    : constant := 152;
   XCB_GLX_GET_SEPARABLE_FILTER           : constant := 153;
   XCB_GLX_GET_HISTOGRAM                  : constant := 154;
   XCB_GLX_GET_HISTOGRAM_PARAMETERFV      : constant := 155;
   XCB_GLX_GET_HISTOGRAM_PARAMETERIV      : constant := 156;
   XCB_GLX_GET_MINMAX                     : constant := 157;
   XCB_GLX_GET_MINMAX_PARAMETERFV         : constant := 158;
   XCB_GLX_GET_MINMAX_PARAMETERIV         : constant := 159;
   XCB_GLX_GET_COMPRESSED_TEX_IMAGE_ARB   : constant := 160;
   XCB_GLX_DELETE_QUERIES_ARB             : constant := 161;
   XCB_GLX_GEN_QUERIES_ARB                : constant := 162;
   XCB_GLX_IS_QUERY_ARB                   : constant := 163;
   XCB_GLX_GET_QUERYIV_ARB                : constant := 164;
   XCB_GLX_GET_QUERY_OBJECTIV_ARB         : constant := 165;
   XCB_GLX_GET_QUERY_OBJECTUIV_ARB        : constant := 166;

end xcb;
